<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>Infinispan 12.0.0.Dev01</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/22Sly3ElP2c/" /><category term="Development" scheme="searchisko:content:tags" /><category term="feed_group_name_infinispan" scheme="searchisko:content:tags" /><category term="feed_name_infinispan" scheme="searchisko:content:tags" /><category term="release" scheme="searchisko:content:tags" /><author><name>Tristan Tarrant</name></author><id>searchisko:content:id:jbossorg_blog-infinispan_12_0_0_dev01</id><updated>2020-07-27T12:42:34Z</updated><published>2020-07-27T12:00:00Z</published><content type="html">&lt;div id="preamble"&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Dear Infinispan community,&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The first of our development releases of Infinispan 12 is here and it features our upgrade to &lt;a href="https://hibernate.org/search/"&gt;Hibernate Search 6&lt;/a&gt; which finally allows us to upgrade to &lt;a href="https://lucene.apache.org/"&gt;Lucene 8.x&lt;/a&gt;. We’ve had to change a few things in our query implementation to accommodate the latest and greatest and to make the feature simpler to use. As expected, being a development release, there are some rough edges and we’d really love &lt;strong&gt;YOUR&lt;/strong&gt; help in making sure that we get everything right for the final release later this year.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You can look at the &lt;a href="https://issues.redhat.com/secure/ReleaseNote.jspa?projectId=12310799&amp;amp;version=12346555"&gt;release notes&lt;/a&gt; to see what has changed.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We’re hard at work on new features, improvements and fixes, so watch this space for more announcements!&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_get_it_use_it_ask_us"&gt;&lt;a class="anchor" href="#_get_it_use_it_ask_us" /&gt;Get it, Use it, Ask us!&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Please &lt;a href="https://infinispan.org/download/"&gt;download&lt;/a&gt;, &lt;a href="https://issues.redhat.com/projects/ISPN"&gt;report bugs&lt;/a&gt;, &lt;a href="https://infinispan.zulipchat.com/"&gt;chat with us&lt;/a&gt;, ask questions on &lt;a href="https://stackoverflow.com/questions/tagged/?tagnames=infinispan&amp;amp;sort=newest"&gt;StackOverflow&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/22Sly3ElP2c" height="1" width="1" alt=""/&gt;</content><summary>Dear Infinispan community, The first of our development releases of Infinispan 12 is here and it features our upgrade to Hibernate Search 6 which finally allows us to upgrade to Lucene 8.x. We’ve had to change a few things in our query implementation to accommodate the latest and greatest and to make the feature simpler to use. As expected, being a development release, there are some rough edges a...</summary><dc:creator>Tristan Tarrant</dc:creator><dc:date>2020-07-27T12:00:00Z</dc:date><feedburner:origLink>http://infinispan.org/blog/2020/07/27/infinispan-12/</feedburner:origLink></entry><entry><title>Deploy your Java web application into the cloud using Eclipse JKube</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/T9JxkRZHv7U/" /><category term="apache maven" scheme="searchisko:content:tags" /><category term="deploy war" scheme="searchisko:content:tags" /><category term="Developer Tools" scheme="searchisko:content:tags" /><category term="fabric8" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Java" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="Spring Web MVC" scheme="searchisko:content:tags" /><author><name>Marc Nuri</name></author><id>searchisko:content:id:jbossorg_blog-deploy_your_java_web_application_into_the_cloud_using_eclipse_jkube</id><updated>2020-07-27T07:00:54Z</updated><published>2020-07-27T07:00:54Z</published><content type="html">&lt;p&gt;Before we had &lt;a href="https://developers.redhat.com/topics/spring-boot"&gt;Spring Boot&lt;/a&gt; and similar frameworks, a web app container was the main requirement for deploying &lt;a href="https://developers.redhat.com/topics/enterprise-java"&gt;Java web applications&lt;/a&gt;. We now live in the age of &lt;a href="https://developers.redhat.com/topics/microservices"&gt;microservices&lt;/a&gt;, and many Java applications are developed on top of &lt;a href="https://developers.redhat.com/products/quarkus/getting-started"&gt;Quarkus&lt;/a&gt;, &lt;a target="_blank" rel="nofollow" href="https://thorntail.io/"&gt;Thorntail&lt;/a&gt;, or Spring Boot. But some use cases still require an old-school web application.&lt;/p&gt; &lt;p&gt;In this article, you will learn how to deploy a Java web application (WAR) into a &lt;a href="https://developers.redhat.com/topics/kubernetes"&gt;Kubernetes&lt;/a&gt; or &lt;a href="https://developers.redhat.com/products/openshift/overview"&gt;Red Hat OpenShift&lt;/a&gt; cluster using &lt;a href="https://developers.redhat.com/blog/2020/01/28/introduction-to-eclipse-jkube-java-tooling-for-kubernetes-and-red-hat-openshift/"&gt;Eclipse JKube&lt;/a&gt;. I&amp;#8217;ll show you how easy it is to make a monolithic Java web application cloud-native, just by adding &lt;a target="_blank" rel="nofollow" href="https://www.eclipse.org/jkube"&gt;Eclipse JKube&lt;/a&gt; Maven plugins.&lt;/p&gt; &lt;h2&gt;The example web application&lt;/h2&gt; &lt;p&gt;For the purpose of this article, we&amp;#8217;ll work with a very simple &lt;a target="_blank" rel="nofollow" href="https://docs.spring.io/spring-framework/docs/5.2.7.RELEASE/spring-framework-reference/web.html#spring-web"&gt;Spring Web MVC&lt;/a&gt; application. The following sample shows the most relevant parts of the Maven project&amp;#8217;s &lt;a target="_blank" rel="nofollow" href="https://github.com/marcnuri-demo/eclipse-jkube-webapp/blob/v0.0.0-tomcat/pom.xml"&gt;pom.xml&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&amp;#60;!-- ... --&amp;#62; &amp;#60;packaging&amp;#62;war&amp;#60;/packaging&amp;#62; &amp;#60;!-- ... --&amp;#62; &amp;#60;properties&amp;#62; &amp;#60;maven.compiler.source&amp;#62;11&amp;#60;/maven.compiler.source&amp;#62; &amp;#60;maven.compiler.target&amp;#62;11&amp;#60;/maven.compiler.target&amp;#62; &amp;#60;failOnMissingWebXml&amp;#62;false&amp;#60;/failOnMissingWebXml&amp;#62; &amp;#60;!-- ... --&amp;#62; &amp;#60;jkube.enricher.jkube-service.type&amp;#62;NodePort&amp;#60;/jkube.enricher.jkube-service.type&amp;#62; &amp;#60;/properties&amp;#62; &amp;#60;dependencies&amp;#62; &amp;#60;dependency&amp;#62; &amp;#60;groupId&amp;#62;org.springframework&amp;#60;/groupId&amp;#62; &amp;#60;artifactId&amp;#62;spring-webmvc&amp;#60;/artifactId&amp;#62; &amp;#60;version&amp;#62;${version.spring}&amp;#60;/version&amp;#62; &amp;#60;/dependency&amp;#62; &amp;#60;dependency&amp;#62; &amp;#60;groupId&amp;#62;javax.servlet&amp;#60;/groupId&amp;#62; &amp;#60;artifactId&amp;#62;javax.servlet-api&amp;#60;/artifactId&amp;#62; &amp;#60;version&amp;#62;4.0.1&amp;#60;/version&amp;#62; &amp;#60;scope&amp;#62;provided&amp;#60;/scope&amp;#62; &amp;#60;/dependency&amp;#62; &amp;#60;/dependencies&amp;#62; &amp;#60;build&amp;#62; &amp;#60;plugins&amp;#62; &amp;#60;plugin&amp;#62; &amp;#60;groupId&amp;#62;org.eclipse.jkube&amp;#60;/groupId&amp;#62; &amp;#60;artifactId&amp;#62;kubernetes-maven-plugin&amp;#60;/artifactId&amp;#62; &amp;#60;version&amp;#62;${version.jkube}&amp;#60;/version&amp;#62; &amp;#60;/plugin&amp;#62; &amp;#60;!-- ... --&amp;#62; &amp;#60;/plugins&amp;#62; &amp;#60;/build&amp;#62; &lt;/pre&gt; &lt;p&gt;First, notice the &lt;code&gt;packaging&lt;/code&gt; element, which indicates that the resulting artifact should be packaged as a &lt;code&gt;war&lt;/code&gt; file, which is the usual format for Java web applications.&lt;/p&gt; &lt;p&gt;In the properties section, notice that the project is configured for Java 11. We&amp;#8217;ll need a compatible JDK to build the project. We use the &lt;a target="_blank" rel="nofollow" href="https://maven.apache.org/plugins/maven-war-plugin/war-mojo.html#failOnMissingWebXml"&gt;failOnMissingWebXml&lt;/a&gt; option to configure the &lt;a target="_blank" rel="nofollow" href="https://maven.apache.org/plugins/maven-war-plugin/"&gt;maven-war-plugin&lt;/a&gt; so that it won&amp;#8217;t fail due to a missing &lt;code&gt;web.xml&lt;/code&gt; file. (You will see soon what we&amp;#8217;re using instead.) Finally, there&amp;#8217;s a JKube-specific property, &lt;code&gt;jkube.enricher.jkube-service.type&lt;/code&gt;. This property configures JKube to create a service-resource manifest using &lt;code&gt;NodePort&lt;/code&gt; as the &lt;code&gt;spec.type&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;In the dependencies section, we find just two dependencies. The &lt;code&gt;spring-webmvc&lt;/code&gt; dependency lets us use the Spring Web MVC framework. The &lt;code&gt;javax.servlet-api&lt;/code&gt; dependency provides compile-time support for the Java Servlet API, which is provided by the web application container at runtime.&lt;/p&gt; &lt;p&gt;Finally, in the plugins section, we&amp;#8217;ve configured the Eclipse JKube dependency. Note that we can use either the &lt;code&gt;kubernetes-maven-plugin&lt;/code&gt; or the &lt;code&gt;openshift-maven-plugin&lt;/code&gt;. The choice of plugin depends on the cluster we want to target, but we only need one of them.&lt;/p&gt; &lt;p&gt;The configuration is simple and straightforward. The only thing different from a typical, old-school Java web application is the Eclipse JKube plugin dependency.&lt;/p&gt; &lt;h3&gt;Java classes in the example project&lt;/h3&gt; &lt;p&gt;The example project contains three Java classes: &lt;code&gt;ExampleInitializer&lt;/code&gt;, &lt;code&gt;ExampleConfiguration&lt;/code&gt;, and &lt;code&gt;ExampleResource&lt;/code&gt;. First, &lt;a target="_blank" rel="nofollow" href="https://github.com/marcnuri-demo/eclipse-jkube-webapp/blob/v0.0.0-tomcat/src/main/java/com/marcnuri/demo/jkube/ExampleInitializer.java"&gt;ExampleInitializer&lt;/a&gt; is a &lt;code&gt;WebApplicationInitializer&lt;/code&gt; implementation. We&amp;#8217;re using it instead of the standard &lt;code&gt;WEB-INF/web.xml&lt;/code&gt; deployment descriptor to configure the &lt;a target="_blank" rel="nofollow" href="https://docs.oracle.com/javaee/7/api/javax/servlet/ServletContext.html?is-external=true"&gt;ServletContext&lt;/a&gt; programmatically.&lt;/p&gt; &lt;p&gt;The following code shows how &lt;code&gt;ExampleInitializer&lt;/code&gt; lets us register Spring&amp;#8217;s &lt;code&gt;DispatcherServlet&lt;/code&gt; without any additional XML configuration:&lt;/p&gt; &lt;pre&gt;final AnnotationConfigWebApplicationContext context = new AnnotationConfigWebApplicationContext(); context.register(ExampleConfiguration.class); context.setServletContext(servletContext); final ServletRegistration.Dynamic dsr = servletContext.addServlet("dispatcher", new DispatcherServlet(context)); dsr.setLoadOnStartup(1); dsr.addMapping("/"); &lt;/pre&gt; &lt;p&gt;The &lt;a target="_blank" rel="nofollow" href="https://github.com/marcnuri-demo/eclipse-jkube-webapp/blob/v0.0.0-tomcat/src/main/java/com/marcnuri/demo/jkube/ExampleConfiguration.java"&gt;ExampleConfiguration&lt;/a&gt; class is a Spring-specific configuration enabling Spring MVC.&lt;/p&gt; &lt;p&gt;Finally, &lt;a target="_blank" rel="nofollow" href="https://github.com/marcnuri-demo/eclipse-jkube-webapp/blob/v0.0.0-tomcat/src/main/java/com/marcnuri/demo/jkube/ExampleResource.java"&gt;ExampleResource&lt;/a&gt; is a standard Spring @&lt;code&gt;&lt;a target="_blank" rel="nofollow" href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/bind/annotation/RestController.html"&gt;RestController&lt;/a&gt;&lt;/code&gt;. It has a single request mapping that responds &lt;b&gt;Hello!!!&lt;/b&gt; to any &lt;code&gt;GET&lt;/code&gt; request.&lt;/p&gt; &lt;h2&gt;Deploy the web application into Kubernetes&lt;/h2&gt; &lt;p&gt;We&amp;#8217;ll start by deploying the example web application into Kubernetes; then, I&amp;#8217;ll show you how to make a couple of adjustments and deploy it into OpenShift.&lt;/p&gt; &lt;h3&gt;Step 1: Build the application&lt;/h3&gt; &lt;p&gt;The first step is to build the project just as we would build any other Maven web application project. Running &lt;code&gt;mvn clean package&lt;/code&gt; generates a new &lt;code&gt;war&lt;/code&gt; artifact in the target directory of &lt;code&gt;target/example-0.0.0-SNAPSHOT.war&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;For the purpose of this example, we&amp;#8217;ll use &lt;a target="_blank" rel="nofollow" href="https://kubernetes.io/docs/setup/learning-environment/minikube/"&gt;Minikube&lt;/a&gt;. So that we can pull the image from the cluster without having to push it to a shared registry, we&amp;#8217;ll use Minikube&amp;#8217;s &lt;code&gt;docker&lt;/code&gt; daemon, &lt;code&gt;eval $(minikube docker-env)&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;We can now issue the &lt;code&gt;mvn k8s:build&lt;/code&gt; command to build the docker image for our application, as shown in Figure 1.&lt;/p&gt; &lt;div id="attachment_734397" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/k8s-build.png"&gt;&lt;img aria-describedby="caption-attachment-734397" class="wp-image-734397" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/k8s-build.png" alt="A screenshot of the console showing the mvn k8s:build command and build output." width="640" height="276" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/k8s-build.png 971w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/k8s-build-300x129.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/k8s-build-768x331.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-734397" class="wp-caption-text"&gt;Figure 1: Build the docker image for the application.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;A new docker image will be tagged as &lt;code&gt;webapp/example:latest&lt;/code&gt; in our docker registry.&lt;/p&gt; &lt;h3&gt;Step 2: Create the cluster configuration&lt;/h3&gt; &lt;p&gt;Next, we create the required cluster configuration resource manifests and apply them to the &lt;code&gt;kubectl&lt;/code&gt;&amp;#8211; configured cluster, as shown in Figure 2.&lt;/p&gt; &lt;div id="attachment_734417" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/k8s-resource-apply.png"&gt;&lt;img aria-describedby="caption-attachment-734417" class="wp-image-734417" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/k8s-resource-apply.png" alt="A screenshot of the console showing mvn k8s:resource and k8s:apply commands and output." width="640" height="359" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/k8s-resource-apply.png 969w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/k8s-resource-apply-300x168.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/k8s-resource-apply-768x431.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-734417" class="wp-caption-text"&gt;Figure 2: Create and deploy the cluster configuration.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;The previous commands will generate the Kubernetes configuration manifests in &lt;code&gt;target/classes/META-INF/jkube/kubernetes.yml&lt;/code&gt;, and will apply them to the cluster.&lt;/p&gt; &lt;h3&gt;Step 3: Verify that the application is running&lt;/h3&gt; &lt;p&gt;Finally, we verify that everything is running by entering the commands shown in Figure 3.&lt;/p&gt; &lt;div id="attachment_734447" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/verify-deployments.png"&gt;&lt;img aria-describedby="caption-attachment-734447" class="wp-image-734447" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/verify-deployments.png" alt="A screenshot of the console showing the kubectl get pod command and output." width="640" height="115" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/verify-deployments.png 967w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/verify-deployments-300x54.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/verify-deployments-768x138.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-734447" class="wp-caption-text"&gt;Figure 3: Verify that the application is running.&lt;/p&gt;&lt;/div&gt; &lt;h2&gt;Deploy the web application into OpenShift&lt;/h2&gt; &lt;p&gt;Following similar steps to those in the previous section, we can seamlessly deploy the example web application to an OpenShift cluster, just by using the &lt;code&gt;openshift-maven-plugin&lt;/code&gt; instead of the &lt;code&gt;kubernetes-maven-plugin&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&amp;#60;build&amp;#62; &amp;#60;plugins&amp;#62; &amp;#60;plugin&amp;#62; &amp;#60;groupId&amp;#62;org.eclipse.jkube&amp;#60;/groupId&amp;#62; &amp;#60;artifactId&amp;#62;openshift-maven-plugin&amp;#60;/artifactId&amp;#62; &amp;#60;version&amp;#62;${version.jkube}&amp;#60;/version&amp;#62; &amp;#60;/plugin&amp;#62; &amp;#60;/plugins&amp;#62; &amp;#60;/build&amp;#62; &lt;/pre&gt; &lt;p&gt;In this case, the plugin prefix is &lt;code&gt;oc&lt;/code&gt; instead of &lt;code&gt;k8s&lt;/code&gt;, but the goals to be run are the same. Note that in this case, the build step uses S2I instead of docker to perform the build.&lt;/p&gt; &lt;div id="attachment_734467" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/oc-build.png"&gt;&lt;img aria-describedby="caption-attachment-734467" class="wp-image-734467" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/oc-build.png" alt="A screenshot of the console showing mvn oc:build command and output." width="640" height="669" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/oc-build.png 966w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/oc-build-287x300.png 287w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/oc-build-768x803.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-734467" class="wp-caption-text"&gt;Figure 4: Build the container image using S2I binary build strategy for the application.&lt;/p&gt;&lt;/div&gt; &lt;div id="attachment_734477" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/oc-resource-apply-verify.png"&gt;&lt;img aria-describedby="caption-attachment-734477" class="wp-image-734477" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/oc-resource-apply-verify.png" alt="A screenshot of the console showing mvn oc:resource and oc:apply commands and output." width="640" height="492" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/oc-resource-apply-verify.png 968w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/oc-resource-apply-verify-300x231.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/oc-resource-apply-verify-768x590.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-734477" class="wp-caption-text"&gt;Figure 5: Create and deploy the cluster OpenShift specific configuration.&lt;/p&gt;&lt;/div&gt; &lt;h2&gt;The developer experience&lt;/h2&gt; &lt;p&gt;You&amp;#8217;ve seen how Eclipse JKube lets us easily deploy a web application to the cloud. It also has other features to ease our lives as developers. Let&amp;#8217;s look at how Eclipse JKube enhances a typical log retrieval.&lt;/p&gt; &lt;h3&gt;Log retrieval&lt;/h3&gt; &lt;p&gt;If we want to print the logs for the web application that we just deployed, we can simply run &lt;code&gt;mvn k8s:log&lt;/code&gt;. The logs will be printed and followed (or tailed) in the current console, as shown in Figure 6.&lt;/p&gt; &lt;div id="attachment_734497" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/k8s-log.png"&gt;&lt;img aria-describedby="caption-attachment-734497" class="wp-image-734497 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/k8s-log-1024x532.png" alt="A screenshot of the mvn k8s:log command and output." width="640" height="333" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/k8s-log-1024x532.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/k8s-log-300x156.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/k8s-log-768x399.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-734497" class="wp-caption-text"&gt;Figure 6: Logs for the Kubernetes application deployment.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;The screenshot in Figure 6 shows the log for the application we&amp;#8217;ve just deployed on Kubernetes. You can see that the Apache Tomcat web application container was started and that the web application was deployed into the ROOT context.&lt;/p&gt; &lt;p style="padding-left: 40px;"&gt;&lt;b&gt;Note&lt;/b&gt;: By default, Eclipse JKube uses &lt;a target="_blank" rel="nofollow" href="https://tomcat.apache.org/"&gt;Apache Tomcat&lt;/a&gt; as its web application container, via the &lt;a target="_blank" rel="nofollow" href="https://quay.io/repository/jkube/jkube-tomcat9-binary-s2i"&gt;jkube/jkube-tomcat9-binary-s2i&lt;/a&gt; base image. In a follow-up article, I will show you how to use different web application containers (such as &lt;a target="_blank" rel="nofollow" href="https://www.eclipse.org/jetty/"&gt;Jetty&lt;/a&gt;), just by adding container-specific files.&lt;/p&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;In this article, you&amp;#8217;ve seen how easy it is to convert an old-school Java web application into a full-fledged cloud-native application, just by adding the Eclipse JKube plugin dependency to your Maven POM. The complete source code for the examples is available on &lt;a target="_blank" rel="nofollow" href="https://github.com/marcnuri-demo/eclipse-jkube-webapp/tree/v0.0.0-tomcat"&gt;GitHub&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;If you&amp;#8217;re interested in learning more about Eclipse JKube, you can visit our main &lt;a target="_blank" rel="nofollow" href="https://github.com/eclipse/jkube"&gt;GitHub repository&lt;/a&gt;, &lt;a target="_blank" rel="nofollow" href="https://www.eclipse.org/jkube/"&gt;website&lt;/a&gt;, or &lt;a target="_blank" rel="nofollow" href="https://gitter.im/eclipse/jkube"&gt;Gitter channel&lt;/a&gt;. And don&amp;#8217;t forget to follow us on &lt;a target="_blank" rel="nofollow" href="https://twitter.com/jkubeio"&gt;Twitter&lt;/a&gt;!&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F27%2Fdeploy-your-java-web-application-into-the-cloud-using-eclipse-jkube%2F&amp;#38;linkname=Deploy%20your%20Java%20web%20application%20into%20the%20cloud%20using%20Eclipse%20JKube" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F27%2Fdeploy-your-java-web-application-into-the-cloud-using-eclipse-jkube%2F&amp;#38;linkname=Deploy%20your%20Java%20web%20application%20into%20the%20cloud%20using%20Eclipse%20JKube" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F27%2Fdeploy-your-java-web-application-into-the-cloud-using-eclipse-jkube%2F&amp;#38;linkname=Deploy%20your%20Java%20web%20application%20into%20the%20cloud%20using%20Eclipse%20JKube" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F27%2Fdeploy-your-java-web-application-into-the-cloud-using-eclipse-jkube%2F&amp;#38;linkname=Deploy%20your%20Java%20web%20application%20into%20the%20cloud%20using%20Eclipse%20JKube" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F27%2Fdeploy-your-java-web-application-into-the-cloud-using-eclipse-jkube%2F&amp;#38;linkname=Deploy%20your%20Java%20web%20application%20into%20the%20cloud%20using%20Eclipse%20JKube" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F27%2Fdeploy-your-java-web-application-into-the-cloud-using-eclipse-jkube%2F&amp;#38;linkname=Deploy%20your%20Java%20web%20application%20into%20the%20cloud%20using%20Eclipse%20JKube" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F27%2Fdeploy-your-java-web-application-into-the-cloud-using-eclipse-jkube%2F&amp;#38;linkname=Deploy%20your%20Java%20web%20application%20into%20the%20cloud%20using%20Eclipse%20JKube" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F27%2Fdeploy-your-java-web-application-into-the-cloud-using-eclipse-jkube%2F&amp;#038;title=Deploy%20your%20Java%20web%20application%20into%20the%20cloud%20using%20Eclipse%20JKube" data-a2a-url="https://developers.redhat.com/blog/2020/07/27/deploy-your-java-web-application-into-the-cloud-using-eclipse-jkube/" data-a2a-title="Deploy your Java web application into the cloud using Eclipse JKube"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/07/27/deploy-your-java-web-application-into-the-cloud-using-eclipse-jkube/"&gt;Deploy your Java web application into the cloud using Eclipse JKube&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/T9JxkRZHv7U" height="1" width="1" alt=""/&gt;</content><summary>Before we had Spring Boot and similar frameworks, a web app container was the main requirement for deploying Java web applications. We now live in the age of microservices, and many Java applications are developed on top of Quarkus, Thorntail, or Spring Boot. But some use cases still require an old-school web application. In this article, you will learn how to deploy a Java web application (WAR) i...</summary><dc:creator>Marc Nuri</dc:creator><dc:date>2020-07-27T07:00:54Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/07/27/deploy-your-java-web-application-into-the-cloud-using-eclipse-jkube/</feedburner:origLink></entry><entry><title>How to Install Red Hat Process Automation Manager 7.7</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/6NMS8BoMsxg/how-to-install-rhpam-77.html" /><category term="AppDev" scheme="searchisko:content:tags" /><category term="Automate" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><category term="Process Automation Manager" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-how_to_install_red_hat_process_automation_manager_7_7</id><updated>2020-07-27T05:00:00Z</updated><published>2020-07-27T05:00:00Z</published><content type="html">&lt;div&gt;&lt;p style="margin: 0px;"&gt;In the past&amp;nbsp;&lt;a data-blogger-escaped-style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;" href="https://1.bp.blogspot.com/-XtYIWE6HERs/XhNb1fqEqwI/AAAAAAAAw2A/SymJTAO25ts4tEjkEWGMA4dJl09Vi3HQwCNcBGAsYHQ/s1600/rhpam-login.png" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"&gt;&lt;img alt="red hat process automation manager" border="0" data-blogger-escaped-data-original-height="927" data-blogger-escaped-data-original-width="1600" height="185" src="https://1.bp.blogspot.com/-XtYIWE6HERs/XhNb1fqEqwI/AAAAAAAAw2A/SymJTAO25ts4tEjkEWGMA4dJl09Vi3HQwCNcBGAsYHQ/s320/rhpam-login.png" style="cursor: move;" title="" width="320" /&gt;&lt;/a&gt;I've kept you up to date on installing Red Hat Process Automation Manager with my easy install project.&amp;nbsp;&lt;/p&gt;&lt;p style="margin: 0px;"&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style="margin: 0px;"&gt;Well here's an update that installs the latest process automation tooling for your development projects in just minutes on your very own machine.&lt;/p&gt;&lt;p style="margin: 0px;"&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style="margin: 0px;"&gt;Not only that, it's done in just three easy steps, so let's take a closer look and see if I'm pulling your leg or telling the truth about how easy this installation can be.&lt;/p&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;p style="margin: 0px;"&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style="margin: 0px;"&gt;Just three easy steps to a fully installed and configured Red Hat Process Automation manager.&lt;/p&gt;&lt;h2 data-blogger-escaped-data-sourcepos="6:1-8:122" dir="auto"&gt;Install on your machine&lt;/h2&gt;&lt;p style="margin: 0px;"&gt;&lt;a data-blogger-escaped-style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;" href="https://1.bp.blogspot.com/-2AAONrobo6Y/XhNbzlLbFYI/AAAAAAAAw18/UBkTqMie9dY-dEyUGSzMQLkFvFfRW_EZACNcBGAsYHQ/s1600/rhpam-business-central.png" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt;&lt;img alt="red hat process automation manager" border="0" data-blogger-escaped-data-original-height="935" data-blogger-escaped-data-original-width="1600" height="186" src="https://1.bp.blogspot.com/-2AAONrobo6Y/XhNbzlLbFYI/AAAAAAAAw18/UBkTqMie9dY-dEyUGSzMQLkFvFfRW_EZACNcBGAsYHQ/s320/rhpam-business-central.png" style="cursor: move;" title="" width="320" /&gt;&lt;/a&gt;There are a few component you'll need to download for free from the provided developers site, then obtain the project linked below, add the&amp;nbsp; downloads, and run the installation script.&lt;/p&gt;&lt;p style="margin: 0px;"&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style="margin: 0px;"&gt;Watch the installation unfold before your eyes, with configuration, settings, and user creation all detailed in the script output so you can learn from the installation.&lt;/p&gt;&lt;/div&gt;&lt;div&gt;&lt;p style="margin: 0px;"&gt;Give it a try with these three steps:&lt;/p&gt;&lt;ol data-blogger-escaped-data-sourcepos="8:1-17:0" data-blogger-escaped-style="text-align: left;"&gt;&lt;li data-blogger-escaped-data-sourcepos="8:1-9:0"&gt;&lt;div data-blogger-escaped-data-sourcepos="8:4-8:122"&gt;&lt;p style="margin: 0px;"&gt;&lt;a href="https://gitlab.com/bpmworkshop/rhpam-install-demo/-/archive/master/rhpam-install-demo-master.zip"&gt;Download and unzip.&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;&lt;div data-blogger-escaped-data-sourcepos="8:4-8:122"&gt;&lt;p style="margin: 0px;"&gt;&lt;br /&gt;&lt;/p&gt;&lt;/div&gt;&lt;/li&gt;&lt;li data-blogger-escaped-data-sourcepos="10:1-11:0"&gt;&lt;div data-blogger-escaped-data-sourcepos="10:4-10:81"&gt;&lt;p style="margin: 0px;"&gt;Add products to installs directory, see installs/README for details and links.&lt;/p&gt;&lt;/div&gt;&lt;div data-blogger-escaped-data-sourcepos="10:4-10:81"&gt;&lt;p style="margin: 0px;"&gt;&lt;br /&gt;&lt;/p&gt;&lt;/div&gt;&lt;/li&gt;&lt;li data-blogger-escaped-data-sourcepos="14:1-15:0"&gt;&lt;div data-blogger-escaped-data-sourcepos="12:4-12:92"&gt;&lt;p style="margin: 0px;"&gt;Run 'init.sh' or 'init.bat' file. 'init.bat' must be run with Administrative privileges.&lt;/p&gt;&lt;/div&gt;&lt;div data-blogger-escaped-data-sourcepos="12:4-12:92"&gt;&lt;p style="margin: 0px;"&gt;&lt;br /&gt;&lt;/p&gt;&lt;/div&gt;&amp;nbsp;Login to&amp;nbsp;&lt;a data-blogger-escaped-target="_blank" href="http://localhost:8080/business-central" rel="nofollow noreferrer noopener"&gt;http://localhost:8080/business-central&lt;/a&gt;&amp;nbsp;(u:erics / p:redhatpam1!)&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;&lt;p style="margin: 0px;"&gt;That's it, not it's time to enjoy your installed and configured Red Hat Process Automation Manager.&lt;/p&gt;&lt;div&gt;&lt;p style="margin: 0px;"&gt;&lt;br /&gt;&lt;/p&gt;&lt;p style="margin: 0px;"&gt;Not sure how to get started with process automation? Try the&amp;nbsp;&lt;a href="https://bpmworkshop.gitlab.io/rhdm/index.html" rel="noreferrer noopener" target="_blank"&gt;online workshop&lt;/a&gt;&amp;nbsp;to get started building a first process automation project from scratch.&lt;/p&gt;&lt;p style="margin: 0px;"&gt;&lt;br /&gt;&lt;/p&gt;&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=A5Tb9wnN75w:v1UwBoupQvY:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=A5Tb9wnN75w:v1UwBoupQvY:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=A5Tb9wnN75w:v1UwBoupQvY:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=A5Tb9wnN75w:v1UwBoupQvY:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=A5Tb9wnN75w:v1UwBoupQvY:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=A5Tb9wnN75w:v1UwBoupQvY:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=A5Tb9wnN75w:v1UwBoupQvY:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=A5Tb9wnN75w:v1UwBoupQvY:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=A5Tb9wnN75w:v1UwBoupQvY:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=A5Tb9wnN75w:v1UwBoupQvY:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=A5Tb9wnN75w:v1UwBoupQvY:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/A5Tb9wnN75w" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/6NMS8BoMsxg" height="1" width="1" alt=""/&gt;</content><summary>In the past I've kept you up to date on installing Red Hat Process Automation Manager with my easy install project.  Well here's an update that installs the latest process automation tooling for your development projects in just minutes on your very own machine. Not only that, it's done in just three easy steps, so let's take a closer look and see if I'm pulling your leg or telling the truth about...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2020-07-27T05:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/A5Tb9wnN75w/how-to-install-rhpam-77.html</feedburner:origLink></entry><entry><title>Installing Red Hat Advanced Cluster Management (ACM) for Kubernetes</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/UOe3AZ4AIes/" /><category term="ci/cd" scheme="searchisko:content:tags" /><category term="cluster management" scheme="searchisko:content:tags" /><category term="devops" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="kubernetes container storage" scheme="searchisko:content:tags" /><category term="manage cluster" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="openshift container storage" scheme="searchisko:content:tags" /><category term="operator" scheme="searchisko:content:tags" /><author><name>Bryant Son</name></author><id>searchisko:content:id:jbossorg_blog-installing_red_hat_advanced_cluster_management_acm_for_kubernetes</id><updated>2020-07-23T07:00:43Z</updated><published>2020-07-23T07:00:43Z</published><content type="html">&lt;p&gt;&lt;a target="_blank" rel="nofollow" href="https://www.redhat.com/en/resources/advanced-cluster-management-kubernetes-faq"&gt;Red Hat Advanced Cluster Management (ACM) for Kubernetes&lt;/a&gt; offers end-to-end visibility and control for managing your cluster and application lifecycle. Among other features, it ensures security and compliance for your entire &lt;a href="https://developers.redhat.com/topics/kubernetes"&gt;Kubernetes&lt;/a&gt; domain across multiple data centers and public clouds.&lt;/p&gt; &lt;p&gt;This article guides you through setting up your &lt;a href="https://developers.redhat.com/products/openshift/overview"&gt;Red Hat OpenShift 4&lt;/a&gt; environment for an ACM installation and then installing ACM. For reasons that I will explain, we&amp;#8217;ll use the command line interface (CLI) to set up the installation environment. Once the environment is set up, I will show you how to complete the installation using either the CLI or the OpenShift web console, with examples for both methods.&lt;/p&gt; &lt;p&gt;Note that I will not demonstrate how to install ACM in a restricted environment. Also, my examples are based on &lt;a target="_blank" rel="nofollow" href="https://www.redhat.com/en/blog/red-hat-introduces-advanced-cluster-management-kubernetes"&gt;Advanced Cluster Management for Kubernetes 1.0. Tech Preview&lt;/a&gt;. You might need to update some of the installation steps for a newer version of ACM.&lt;/p&gt; &lt;p style="padding-left: 40px;"&gt;&lt;b&gt;Note&lt;/b&gt;: See &lt;a target="_blank" rel="nofollow" href="https://www.redhat.com/en/resources/advanced-cluster-management-kubernetes-datasheet"&gt;&lt;i&gt;Red Hat Advanced Cluster Management for Kubernetes&lt;/i&gt;&lt;/a&gt; for more about the features and benefits of ACM.&lt;/p&gt; &lt;h2&gt;ACM installation overview&lt;/h2&gt; &lt;p&gt;You can use either the OpenShift 4 web console&amp;#8217;s built-in &lt;a href="https://developers.redhat.com/topics/kubernetes/operators"&gt;OperatorHub&lt;/a&gt; or the OpenShift CLI to install ACM. The installation breaks down to six steps:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Prepare the environment for the ACM installation.&lt;/li&gt; &lt;li&gt;Create a new OpenShift project and namespace.&lt;/li&gt; &lt;li&gt;Create an image-pull secret.&lt;/li&gt; &lt;li&gt;Install ACM and subscribe to the ACM &lt;a href="https://developers.redhat.com/topics/kubernetes/operators/"&gt;Operator&lt;/a&gt; group.&lt;/li&gt; &lt;li&gt;Create the MultiClusterHub resource.&lt;/li&gt; &lt;li&gt;Verify the ACM installation.&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;We will use the OpenShift command line for the first several steps; then, I will show you how to use either the command line or the OpenShift 4 web console.&lt;/p&gt; &lt;h2&gt;Step 1: Prepare the environment for the ACM Installation&lt;/h2&gt; &lt;p&gt;Before starting with the installation process, make sure that you have the correct version of OpenShift and other resources set up in your development environment. Before you start setting up your development environment for ACM, make sure that you have OpenShift 4.3 or higher installed on Linux x86_64 and &lt;a href="https://developers.redhat.com/topics/linux"&gt;Red Hat Enterprise Linux&lt;/a&gt; (RHEL) 7.6 or higher.&lt;/p&gt; &lt;p&gt;There are a number of important details to consider before proceeding. One is the number of pods per node. The number of pods you need depends on the application type and how you configure the worker nodes. The maximum pod per node is 500 and the maximum pod per CPU core is 10.&lt;/p&gt; &lt;p&gt;Another is that the cluster size depends on the number of worker nodes. If your cluster has a few worker nodes, consider increasing the number of worker nodes while decreasing the size of each node for adequate headspace, efficiency, mobility, and resiliency.&lt;/p&gt; &lt;p style="padding-left: 40px;"&gt;&lt;strong&gt;Note&lt;/strong&gt;: &lt;a target="_blank" rel="nofollow" href="https://www.openshift.com/blog/500_pods_per_node"&gt;Learn more&lt;/a&gt; about minimum and maximum node configuration and pod resource sizing.&lt;/p&gt; &lt;p&gt;You also need to consider the memory that is required for the specific type of workload you will be running, plus for the other application frameworks in your environment. And, you have to be prepared to accommodate workload mobility.&lt;/p&gt; &lt;p&gt;As an example, if your OpenShift installation is running on Amazon Web Services (AWS), it is recommended that you use a node size of m5.2xlarge or above. Figure 1 shows the configuration options for ACM clusters running on AWS.&lt;/p&gt; &lt;div id="attachment_729757" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/1.png"&gt;&lt;img aria-describedby="caption-attachment-729757" class="wp-image-729757 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/1-1024x567.png" alt="A screenshot of a table showing the maximum number of managed clusters running on AWS." width="640" height="354" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/1-1024x567.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/1-300x166.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/1-768x425.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/1.png 1278w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-729757" class="wp-caption-text"&gt;Figure 1: Cluster maximums for running ACM on Amazon Web Services.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;If you are a cluster admin, you can increase the size of worker nodes using &lt;code&gt;machineset&lt;/code&gt; sizing operations. To upgrade to a node size of m5.2xlarge:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;List the machinesets:&lt;/li&gt; &lt;/ol&gt; &lt;pre style="padding-left: 40px;"&gt;$ oc get machinesets -n openshift-machine-api&lt;/pre&gt; &lt;ol start="2"&gt; &lt;li&gt;Next, upgrade the instance type of CLUSTER_NAME to m5.2xlarge:&lt;/li&gt; &lt;/ol&gt; &lt;pre style="padding-left: 40px;"&gt;$ oc patch machineset CLUSTER_NAME --type='merge' --patch='{&amp;#38;quot;spec&amp;#38;quot;: { &amp;#38;quot;template&amp;#38;quot;: { &amp;#38;quot;spec&amp;#38;quot;: { &amp;#38;quot;providerSpec&amp;#38;quot;: { &amp;#38;quot;value&amp;#38;quot;: { &amp;#38;quot;instanceType&amp;#38;quot;: &amp;#38;quot;m5.2xlarge&amp;#38;quot;}}}}}}' -n openshift-machine-api&amp;#38;lt;/pre&amp;#38;gt;&lt;/pre&gt; &lt;ol start="3"&gt; &lt;li&gt;Scale down CLUSTER_NAME to zero:&lt;/li&gt; &lt;/ol&gt; &lt;pre style="padding-left: 40px;"&gt;$ oc scale machineset CLUSTER_NAME --replicas=0 -n openshift-machine-api&lt;/pre&gt; &lt;ol start="4"&gt; &lt;li&gt;Scale back up the CLUSTER_NAME to 1 again:&lt;/li&gt; &lt;/ol&gt; &lt;pre style="padding-left: 40px;"&gt;$ oc scale machineset CLUSTER_NAME --replicas=1 -n openshift-machine-api &lt;/pre&gt; &lt;p&gt;In this instance, &lt;code&gt;CLUSTER_NAME&lt;/code&gt; is the name of one of your cluster (or worker) nodes. You can repeat the command for all of your worker nodes. Run the first command (&lt;code&gt;oc get machinesets&lt;/code&gt;) to see a listing of all of your worker nodes, as shown in Figure 2.&lt;/p&gt; &lt;div id="attachment_729787" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-05-25-at-1.11.21-PM.png"&gt;&lt;img aria-describedby="caption-attachment-729787" class="wp-image-729787 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-05-25-at-1.11.21-PM-1024x130.png" alt="A screenshot of the CLI showing a listing of worker nodes." width="640" height="81" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-05-25-at-1.11.21-PM-1024x130.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-05-25-at-1.11.21-PM-300x38.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-05-25-at-1.11.21-PM-768x98.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-05-25-at-1.11.21-PM.png 1256w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-729787" class="wp-caption-text"&gt;Figure 2: View a listing of all of your worker nodes.&lt;/p&gt;&lt;/div&gt; &lt;h2&gt;Step 2: Create a new OpenShift project namespace&lt;/h2&gt; &lt;p&gt;If you install ACM through the OpenShift OperatorHub, a new OpenShift project will be created automatically. However, I recommended creating the new OpenShift project namespace &lt;i&gt;before&lt;/i&gt; you install ACM. The images required to deploy ACM to OpenShift are hosted in remote registries, so you can still anticipate the additional authentication issue. By providing the authentication you know for sure it works, you can ensure that the image pull error will be avoided and will work successfully. Also, among other things, creating the OpenShift project first will allow you to create an image-pull secret before you install ACM.&lt;/p&gt; &lt;p style="padding-left: 40px;"&gt;&lt;b&gt;Note&lt;/b&gt;: If you are installing ACM in a restricted environment, it is especially important to create a new OpenShift project before installing ACM. Doing so will help you avoid errors in the installation process.&lt;/p&gt; &lt;p&gt;To create a new OpenShift project in the CLI, you need to create a new namespace and then switch to the project. For this example, run the following command to create a new OpenShift namespace named open-cluster-management:&lt;/p&gt; &lt;pre&gt;$ oc new-project open-cluster-management&lt;/pre&gt; &lt;p&gt;Then, run the following command to switch to the project:&lt;/p&gt; &lt;pre&gt;$ oc project open-cluster-management&lt;/pre&gt; &lt;h2&gt;Step 3: Create an image-pull secret&lt;/h2&gt; &lt;p&gt;While the ACM Operator is capable of determining the required credentials to pull images from the Red Hat Registry, I recommend creating the image-pull secret yourself. There are two reasons:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Manually creating the image-pull secret eliminates a potential problem with authenticating the image pull.&lt;/li&gt; &lt;li&gt;If you end up working in a restricted environment, you will have to pull the ACM images from a private image registry instead of the Red Hat Registry.&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;To create a new OpenShift secret in the CLI, use the following command to create a new OpenShift secret that will authenticate with the Red Hat Tech Preview Registry, where ACM is hosted:&lt;/p&gt; &lt;pre&gt;$ oc create secret docker-registry &amp;#60;strong&amp;#62;YOUR_SECRET_NAME&amp;#60;/strong&amp;#62; --docker-server=registry.access.redhat.com/rhacm1-tech-preview --docker-username=&amp;#60;strong&amp;#62;YOUR_REDHAT_USERNAME&amp;#60;/strong&amp;#62; --docker-password=&amp;#60;strong&amp;#62;YOUR_REDHAT_PASSWORD&amp;#60;/strong&amp;#62; &lt;/pre&gt; &lt;p&gt;For &lt;code&gt;YOUR_SECRET_NAME&lt;/code&gt;, provide the OpenShift secret name that you will use to pull the images from the Red Hat Registry. This name is used when you create the MultiClusterHub later. For &lt;code&gt;YOUR_REDHAT_USERNAME&lt;/code&gt; and &lt;code&gt;YOUR_REDHAT_PASSWORD&lt;/code&gt;, use the credentials for your Red Hat subscription.&lt;/p&gt; &lt;h2&gt;Step 4: Install ACM and subscribe to the ACM Operator group&lt;/h2&gt; &lt;p&gt;In this section, I will show you how to install ACM and subscribe to the ACM Operator group using both the CLI and the OpenShift web console.&lt;/p&gt; &lt;h2&gt;Install and subscribe using the CLI&lt;/h2&gt; &lt;p&gt;If you are using the CLI, you will need to manually create an ACM Operator group before you can subscribe to it. To start, create a YAML file named &lt;code&gt;acm-operator.yaml&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;apiVersion: operators.coreos.com/v1 kind: OperatorGroup metadata: name: acm-operator spec: targetNamespaces: - open-cluster-management &lt;/pre&gt; &lt;p&gt;In this case, &lt;code&gt;acm-operator&lt;/code&gt; is the name of Operator group that you want to call, and &lt;code&gt;open-cluster-management&lt;/code&gt; is the name of the OpenShift project that you created in Step 2.&lt;/p&gt; &lt;p&gt;You can now run the following command to apply the &lt;code&gt;OperatorGroup&lt;/code&gt; that you have just created:&lt;/p&gt; &lt;pre&gt;$ oc apply -f acm-operator.yaml &lt;/pre&gt; &lt;p&gt;Next, create another YAML file for an ACM subscription. I am calling the subscription file  &lt;code&gt;acm-subscription.yaml&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;apiVersion: operators.coreos.com/v1alpha1 kind: Subscription metadata: name: acm-operator-subscription spec: sourceNamespace: openshift-marketplace source: redhat-operators channel: release-1.0 installPlanApproval: Automatic name: advanced-cluster-management&lt;/pre&gt; &lt;p&gt;Run the following command to install the subscription:&lt;/p&gt; &lt;pre&gt;$ oc apply -f acm-subscription.yaml &lt;/pre&gt; &lt;h3&gt;Install ACM and subscribe using the OpenShift web console&lt;/h3&gt; &lt;p&gt;To install and subscribe to the ACM Operator group from the OpenShift web console, the first thing you need to do is open the web console and select the OperatorHub. Search for &amp;#8220;advanced cluster,&amp;#8221; and Advanced Cluster Management for Kubernetes will pop up. Select it, as shown in Figure 2.&lt;/p&gt; &lt;div id="attachment_729887" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/2.png"&gt;&lt;img aria-describedby="caption-attachment-729887" class="wp-image-729887 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/2-1024x477.png" alt="A screenshot showing Advanced Cluster Management for Kubernetes as a search result." width="640" height="298" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/2-1024x477.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/2-300x140.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/2-768x357.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-729887" class="wp-caption-text"&gt;Figure 2: Searching for &amp;#8216;advanced cluster&amp;#8217; brings up Advanced Cluster Management for Kubernetes.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;You will see a brief description of Advanced Cluster Management for Kubernetes. Click the &lt;b&gt;Install&lt;/b&gt; button, as shown in Figure 3.&lt;/p&gt; &lt;div id="attachment_729897" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/3.png"&gt;&lt;img aria-describedby="caption-attachment-729897" class="wp-image-729897 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/3-1024x485.png" alt="A screenshot of the installation page for Advanced Cluster Management for Kubernetes." width="640" height="303" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/3-1024x485.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/3-300x142.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/3-768x364.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-729897" class="wp-caption-text"&gt;Figure 3: Install Advanced Cluster Management for Kubernetes.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Next, set up the ACM subscription. Choose the &lt;b&gt;open-cluster-management&lt;/b&gt; OpenShift namespace that you created earlier. As shown in Figure 4, ACM will try to install this namespace as the default.&lt;/p&gt; &lt;div id="attachment_729907" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/4.png"&gt;&lt;img aria-describedby="caption-attachment-729907" class="wp-image-729907 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/4-1024x482.png" alt="A screenshot of the Create Operator Subscription page." width="640" height="301" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/4-1024x482.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/4-300x141.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/4-768x361.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-729907" class="wp-caption-text"&gt;Figure 4: Create the Operator subscription with your project namespace as the default.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Once you&amp;#8217;ve selected the namespace, scroll down, and click &lt;b&gt;Subscribe&lt;/b&gt;, as shown in Figure 5.&lt;/p&gt; &lt;div id="attachment_729917" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/5.png"&gt;&lt;img aria-describedby="caption-attachment-729917" class="wp-image-729917 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/5-1024x480.png" alt="A screenshot of the Subscribe button to complete the ACM installation and subscription." width="640" height="300" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/5-1024x480.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/5-300x141.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/5-768x360.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-729917" class="wp-caption-text"&gt;Figure 5: Click Subscribe to complete the installation and subscription.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;If you are still in the web console, you will see the ACM Operator installation taking place. If everything goes well, you will see the status shown in Figure 6.&lt;/p&gt; &lt;div id="attachment_729927" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/6.png"&gt;&lt;img aria-describedby="caption-attachment-729927" class="wp-image-729927 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/6-1024x481.png" alt="A screenshot of installed Operators, including the ACM Operator." width="640" height="301" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/6-1024x481.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/6-300x141.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/6-768x361.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-729927" class="wp-caption-text"&gt;Figure 6: The success page shows your installed Operators, including the ACM Operator.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;If you click &lt;b&gt;Advanced Cluster Management for Kubernetes&lt;/b&gt; in the web console at this point, you will not initially see much of anything. You must proceed with installing the MultiClusterHub to see the running ACM application.&lt;/p&gt; &lt;h2&gt;Step 5: Create the MultiClusterHub resource&lt;/h2&gt; &lt;p&gt;Again, I will walk you through how to create the MultiClusterHub through both the command line and the web console. Adding the &lt;a target="_blank" rel="nofollow" href="https://operatorhub.io/operator/multicluster-operators-subscription"&gt;MultiClusterHub Operator&lt;/a&gt;—which is defined and managed through a Custom Resource Definition (CRD)—lets you manage the cluster type, policy, monitoring, cluster topology, more.&lt;/p&gt; &lt;h3&gt;Create the MultiClusterHub from the CLI&lt;/h3&gt; &lt;p&gt;To install the MultiClusterHub using the command line, start by creating a YAML file called &lt;code&gt;multicluster-acm.yaml&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;apiVersion: operators.open-cluster-management.io/v1beta1 kind: MultiClusterHub metadata: name: multiclusterhub namespace: open-cluster-management spec: imagePullSecret: &lt;b&gt;YOUR_SECRET_NAME&lt;/b&gt; &lt;/pre&gt; &lt;p&gt;In this case, &lt;code&gt;open-cluster-management&lt;/code&gt; is the OpenShift project name and &lt;code&gt;YOUR_SECRET_NAME&lt;/code&gt; is the OpenShift secret that contains the image-pull secret that you created in Step 3.&lt;/p&gt; &lt;p&gt;Run the following command to install the MultiClusterHub:&lt;/p&gt; &lt;pre&gt;$ oc apply -f multicluster-acm.yaml &lt;/pre&gt; &lt;p&gt;Run this command to get the application URL, which you will use to access the application:&lt;/p&gt; &lt;pre&gt;$ oc get route &lt;/pre&gt; &lt;h3&gt;Create the MultiClusterHub using the web console&lt;/h3&gt; &lt;p&gt;Now, let&amp;#8217;s follow the same steps using the web console. To start, open the ACM menu, then click the &lt;b&gt;MultiClusterHub&lt;/b&gt; tab that is shown in Figure 7.&lt;/p&gt; &lt;div id="attachment_729947" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/7.png"&gt;&lt;img aria-describedby="caption-attachment-729947" class="wp-image-729947 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/7-1024x502.png" alt="A screenshot of the ACM page with the unopened MultiClusterHub tab." width="640" height="314" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/7-1024x502.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/7-300x147.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/7-768x377.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-729947" class="wp-caption-text"&gt;Figure 7: Open the MultiClusterHub tab.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;From the &lt;strong&gt;MutiClusterHub&lt;/strong&gt; section, click &lt;b&gt;Create MultiClusterHub&lt;/b&gt;, as shown in Figure 8.&lt;/p&gt; &lt;div id="attachment_729957" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/8.png"&gt;&lt;img aria-describedby="caption-attachment-729957" class="wp-image-729957 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/8-1024x501.png" alt="A screenshot of the option to create the MultiClusterHub." width="640" height="313" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/8-1024x501.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/8-300x147.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/8-768x375.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-729957" class="wp-caption-text"&gt;Figure 8: Create the MultiClusterHub.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Next, you&amp;#8217;ll be asked to provide a value in the &lt;b&gt;imagePullSecret&lt;/b&gt; field. Enter the OpenShift secret name that you created in Step 3, then click &lt;b&gt;Create&lt;/b&gt; (as shown in Figure 9).&lt;/p&gt; &lt;div id="attachment_729967" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/9.png"&gt;&lt;img aria-describedby="caption-attachment-729967" class="wp-image-729967 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/9-1024x533.png" alt="A screenshot of the option to create the OpenShift secret name." width="640" height="333" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/9-1024x533.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/9-300x156.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/9-768x400.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-729967" class="wp-caption-text"&gt;Figure 9: Enter the OpenShift secret name, then click Create.&lt;/p&gt;&lt;/div&gt; &lt;p style="padding-left: 40px;"&gt;&lt;b&gt;Note&lt;/b&gt;: Some ACM users report that it is possible to leave the &lt;code&gt;spec&lt;/code&gt; field shown in Figure 9 empty (as &lt;code&gt;spec: {}&lt;/code&gt;) and successfully install the MutiClusterHub. I recommend providing the OpenShift secret that you will use to pull the required ACM images, with the correct credentials.&lt;/p&gt; &lt;h2&gt;Step 6: Verify the ACM installation&lt;/h2&gt; &lt;p&gt;As the final step, let&amp;#8217;s make sure that we have successfully installed ACM. First, confirm that the MultiClusterHub events log reports no issues in the web console, as shown in Figure 10.&lt;/p&gt; &lt;div id="attachment_729987" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/10.png"&gt;&lt;img aria-describedby="caption-attachment-729987" class="wp-image-729987 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/10-1024x490.png" alt="A screenshot of the MultiClusterHub events log." width="640" height="306" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/10-1024x490.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/10-300x144.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/10-768x367.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-729987" class="wp-caption-text"&gt;Figure 10: Check the MultiClusterHub events log.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Next, check the pods to ensure that they are all running successfully, as shown in Figure 11.&lt;/p&gt; &lt;div id="attachment_729997" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/11.png"&gt;&lt;img aria-describedby="caption-attachment-729997" class="wp-image-729997 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/11-1024x526.png" alt="A screenshot of the pods running." width="640" height="329" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/11-1024x526.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/11-300x154.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/11-768x394.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-729997" class="wp-caption-text"&gt;Figure 11: Confirm that the pods are all running.&lt;/p&gt;&lt;/div&gt; &lt;p style="padding-left: 40px;"&gt;&lt;b&gt;Note&lt;/b&gt;: There is a known problem with the &lt;code&gt;mcmapi-server&lt;/code&gt; that occurs due to a &lt;code&gt;cert-manager&lt;/code&gt; error. Execute &lt;code&gt;oc get helmreleases&lt;/code&gt;, and then &lt;code&gt;grep cert-manager&lt;/code&gt; to verify the version of &lt;code&gt;cert-manager&lt;/code&gt; and correct it.&lt;/p&gt; &lt;p&gt;Finally, you can visit the ACM URL (which is exposed through the application route) to confirm the successful installation, as shown in Figure 12.&lt;/p&gt; &lt;div id="attachment_730007" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/12.png"&gt;&lt;img aria-describedby="caption-attachment-730007" class="wp-image-730007 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/12-1024x565.png" alt="A screenshot of the ACM welcome page." width="640" height="353" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/12-1024x565.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/12-300x166.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/12-768x424.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-730007" class="wp-caption-text"&gt;Figure 12: The ACM welcome page confirms the successful installation.&lt;/p&gt;&lt;/div&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;You can now install Advanced Cluster Management through Red Hat Openshift. Your next step is learning how to use these tools to manage multiple clusters. Next time, I will cover the ACM features and tricks that will get you there.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F23%2Finstalling-red-hat-advanced-cluster-management-acm-for-kubernetes%2F&amp;#38;linkname=Installing%20Red%20Hat%20Advanced%20Cluster%20Management%20%28ACM%29%20for%20Kubernetes" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F23%2Finstalling-red-hat-advanced-cluster-management-acm-for-kubernetes%2F&amp;#38;linkname=Installing%20Red%20Hat%20Advanced%20Cluster%20Management%20%28ACM%29%20for%20Kubernetes" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F23%2Finstalling-red-hat-advanced-cluster-management-acm-for-kubernetes%2F&amp;#38;linkname=Installing%20Red%20Hat%20Advanced%20Cluster%20Management%20%28ACM%29%20for%20Kubernetes" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F23%2Finstalling-red-hat-advanced-cluster-management-acm-for-kubernetes%2F&amp;#38;linkname=Installing%20Red%20Hat%20Advanced%20Cluster%20Management%20%28ACM%29%20for%20Kubernetes" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F23%2Finstalling-red-hat-advanced-cluster-management-acm-for-kubernetes%2F&amp;#38;linkname=Installing%20Red%20Hat%20Advanced%20Cluster%20Management%20%28ACM%29%20for%20Kubernetes" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F23%2Finstalling-red-hat-advanced-cluster-management-acm-for-kubernetes%2F&amp;#38;linkname=Installing%20Red%20Hat%20Advanced%20Cluster%20Management%20%28ACM%29%20for%20Kubernetes" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F23%2Finstalling-red-hat-advanced-cluster-management-acm-for-kubernetes%2F&amp;#38;linkname=Installing%20Red%20Hat%20Advanced%20Cluster%20Management%20%28ACM%29%20for%20Kubernetes" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F23%2Finstalling-red-hat-advanced-cluster-management-acm-for-kubernetes%2F&amp;#038;title=Installing%20Red%20Hat%20Advanced%20Cluster%20Management%20%28ACM%29%20for%20Kubernetes" data-a2a-url="https://developers.redhat.com/blog/2020/07/23/installing-red-hat-advanced-cluster-management-acm-for-kubernetes/" data-a2a-title="Installing Red Hat Advanced Cluster Management (ACM) for Kubernetes"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/07/23/installing-red-hat-advanced-cluster-management-acm-for-kubernetes/"&gt;Installing Red Hat Advanced Cluster Management (ACM) for Kubernetes&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/UOe3AZ4AIes" height="1" width="1" alt=""/&gt;</content><summary>Red Hat Advanced Cluster Management (ACM) for Kubernetes offers end-to-end visibility and control for managing your cluster and application lifecycle. Among other features, it ensures security and compliance for your entire Kubernetes domain across multiple data centers and public clouds. This article guides you through setting up your Red Hat OpenShift 4 environment for an ACM installation and th...</summary><dc:creator>Bryant Son</dc:creator><dc:date>2020-07-23T07:00:43Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/07/23/installing-red-hat-advanced-cluster-management-acm-for-kubernetes/</feedburner:origLink></entry><entry><title>Open Data Hub and Kubeflow installation customization</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/jzm-GUPYJQI/" /><category term="Big Data" scheme="searchisko:content:tags" /><category term="devops" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="JupyterHub" scheme="searchisko:content:tags" /><category term="Kubeflow" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="Open Data Hub" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="operator" scheme="searchisko:content:tags" /><author><name>Václav Pavlín</name></author><id>searchisko:content:id:jbossorg_blog-open_data_hub_and_kubeflow_installation_customization</id><updated>2020-07-23T07:00:30Z</updated><published>2020-07-23T07:00:30Z</published><content type="html">&lt;p&gt;The main goal of &lt;a href="https://developers.redhat.com/topics/kubernetes"&gt;Kubernetes&lt;/a&gt; is to reach the desired state: to deploy our pods, set up the network, and provide storage. This paradigm extends to &lt;a target="_blank" rel="nofollow" href="https://www.openshift.com/learn/topics/operators"&gt;Operators&lt;/a&gt;, which use &lt;a target="_blank" rel="nofollow" href="https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/"&gt;custom resources&lt;/a&gt; to define the state. When the Operator picks up the custom resource, it will always try to get to the state defined by it. That means that if we modify a resource that is managed by the Operator, it will quickly replace it to match the desired state.&lt;/p&gt; &lt;p&gt;This can get confusing when we&amp;#8217;re trying to customize Open Data Hub (ODH) or Kubeflow installations, because the &lt;a target="_blank" rel="nofollow" href="https://github.com/opendatahub-io/odh-manifests/blob/master/kfdef/kfctl_openshift.yaml"&gt;KFDef custom resource&lt;/a&gt; does not expose all of the potential configuration options.&lt;/p&gt; &lt;p&gt;In this guide, I&amp;#8217;ll walk through three options to modify the deployment: directly edit manifests in a fork, create repositories with overrides, and add overlays. I&amp;#8217;ll use an example of customizing the JupyterHub component via a provided &lt;a target="_blank" rel="nofollow" href="https://github.com/opendatahub-io/odh-manifests/blob/master/jupyterhub/jupyterhub/base/jupyterhub-configmap.yaml"&gt;ConfigMap&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;How to customize the installation&lt;/h2&gt; &lt;p&gt;You can customize the deployment in three different ways. All of them involve working with Git and the odh-manifests repository:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Approach 1: Fork odh-manifests and maintain changes there.&lt;/li&gt; &lt;li&gt;Approach 2: Create your own manifests repository to override the component resources.&lt;/li&gt; &lt;li&gt;Approach 3: Fork the odh-manifests repository and extend it with component overlays.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Each of the above will require you to have a Git repository with &lt;a target="_blank" rel="nofollow" href="https://kustomize.io/"&gt;Kustomize&lt;/a&gt; manifests and &lt;a href="https://developers.redhat.com/openshift"&gt;Red Hat OpenShift&lt;/a&gt; resources. (You will reference these from the KFDef resource.) However, each approach requires a different level of effort to create and maintain.&lt;/p&gt; &lt;p&gt;I recommend the third approach for customizing installations. However, in this article, I will go through each option in detail.&lt;/p&gt; &lt;h3&gt;Approach 1: Fork and modify the odh-manifests repository&lt;/h3&gt; &lt;p&gt;To fork and modify the odh-manifests repository and maintain the changes there:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Go to the &lt;a target="_blank" rel="nofollow" href="https://github.com/opendatahub-io/odh-manifests"&gt;odh-manifests repository&lt;/a&gt; and hit the fork button.&lt;/li&gt; &lt;li&gt;Clone your fork and make changes to it.&lt;/li&gt; &lt;li&gt;Push the changes to the forked repository, update the &lt;a target="_blank" rel="nofollow" href="https://github.com/opendatahub-io/odh-manifests/blob/v0.6.1/kfdef/kfctl_openshift.yaml#L118"&gt;KFDef resource&lt;/a&gt; to point to the fork, and deploy.&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;It is quite simple to start with this approach. However, it might be hard to maintain if you need to sync back with the original odh-manifests repository. Making any change could result in a conflict on the Git level. That would require you to manually intervene during rebases. This is true even for simple things like adding an environment variable or changing its value.&lt;/p&gt; &lt;p&gt;On the other hand, it is easy to see the changes that the upstream repository is making, because you have the Git history and tracking.&lt;/p&gt; &lt;h3&gt;Approach 2: Customize by overrides&lt;/h3&gt; &lt;p&gt;To customize by overrides, start from an empty repository, and then:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Create the directory structure that matches the one in the odh-manifests repository.&lt;/li&gt; &lt;li&gt;Add the files you would like to customize.&lt;/li&gt; &lt;li&gt;Add your repository to the KFDef resource as &lt;a target="_blank" rel="nofollow" href="https://github.com/opendatahub-io/odh-manifests/blob/v0.6.1/kfdef/kfctl_openshift.yaml#L118"&gt;an additional repository reference&lt;/a&gt;. Then duplicate the component you are customizing. It is important to change the repository reference (repoRef) to the repository with your overrides.&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;The Operator uses the repositories and components in KFDef in the order they are defined. This means your files replace the files coming from odh-manifests.&lt;/p&gt; &lt;p&gt;This approach is simple, and you do not have to worry about Git conflicts. On the other hand, it is harder to keep track of your changes in the upstream odh-manifests repository. For example, an Operator could rename a file you are overriding in odh-manifests. Then you&amp;#8217;d end up in an inconsistent state where you do not override the resource but only add it to the set of deployed manifests. It is harder to spot such changes in this approach because you do not have the Git history connecting the two repositories.&lt;/p&gt; &lt;p&gt;For example, let&amp;#8217;s customize the JupyterHub component. To do this, we&amp;#8217;ll use the &lt;a target="_blank" rel="nofollow" href="https://github.com/vpavlin/odh-manifests-overrides/tree/master"&gt;odh-manifests-overrides example repository&lt;/a&gt;, which provides a customization to a ConfigMap deployed as a part of JupyterHub component:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Deploy the Open Data Hub Operator and upload the KFDef custom resource to the cluster (see &lt;a target="_blank" rel="nofollow" href="https://opendatahub.io/docs/getting-started/quick-installation.html"&gt;Quick Installation guide&lt;/a&gt;):&lt;/li&gt; &lt;/ol&gt; &lt;pre style="padding-left: 40px;"&gt;$ oc apply -f https://raw.githubusercontent.com/vpavlin/odh-manifests-overrides/master/kfdef/kfctl_openshift_custom.yaml&lt;/pre&gt; &lt;ol start="2"&gt; &lt;li&gt;Wait for the Open Data Hub instance to start.&lt;/li&gt; &lt;li&gt;Run the following command to obtain the customized ConfigMap:&lt;/li&gt; &lt;/ol&gt; &lt;pre style="padding-left: 40px;"&gt;$ oc describe cm jupyterhub-cfg&lt;/pre&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;The content should match the ConfigMap available in the&lt;/span&gt; &lt;a target="_blank" rel="nofollow" href="https://github.com/vpavlin/odh-manifests-overrides/blob/master/jupyterhub/jupyterhub/base/jupyterhub-configmap.yaml"&gt;odh-manifests-overrides repository&lt;/a&gt;.&lt;/p&gt; &lt;h3&gt;Approach 3: Customize with overlays&lt;/h3&gt; &lt;p&gt;This last approach is a combination of the previous approaches:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Fork the repository, but don&amp;#8217;t touch any manifests already existing in the repository.&lt;/li&gt; &lt;li&gt;Add new overlays.&lt;/li&gt; &lt;li&gt;Create new resources or remove and modify existing ones.&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;It&amp;#8217;s more complicated to work with overlays than to directly edit the manifests. However, this process is more convenient and consistent than creating the overrides. In the long term, the overlays approach provides more flexibility. With it, you can also create various overlays for different use cases or environments in the same code base.&lt;/p&gt; &lt;p&gt;This approach prevents the conflicts on rebases because it does not require you to change any existing manifests. The overlays should keep working across rebases and ODH versions. There are a few exceptions. One is if you&amp;#8217;re doing something complicated like renaming existing resources via patches. Another exception is if there are significant changes to the component upstream, like a major component version change that requires a complete change of resource type.&lt;/p&gt; &lt;p&gt;To customize the JupyterHub component, let&amp;#8217;s look at another example. This time we will use the &lt;a target="_blank" rel="nofollow" href="https://github.com/vpavlin/odh-manifests-overlays"&gt;odh-manifests-overlays repository&lt;/a&gt;, which provides a sample of the overlays approach. You can immediately see that this is a copy of the odh-manifests repository. It also shares its Git history.&lt;/p&gt; &lt;p&gt;This version has one commit in addition, which adds an &lt;a target="_blank" rel="nofollow" href="https://github.com/vpavlin/odh-manifests-overlays/commit/HEAD"&gt;overlay to the JupyterHub component&lt;/a&gt;. This overlay modifies a JupyterHub ConfigMap. It also adds an additional JupyterHub singleuser profiles ConfigMap:&lt;/p&gt; &lt;p&gt;Let&amp;#8217;s test this out:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Deploy the Open Data Hub Operator (see &lt;a target="_blank" rel="nofollow" href="https://opendatahub.io/docs/getting-started/quick-installation.html"&gt;Quick Installation guide&lt;/a&gt;).&lt;/li&gt; &lt;li&gt;Upload the &lt;a target="_blank" rel="nofollow" href="https://github.com/vpavlin/odh-manifests-overlays/blob/master/kfdef/kfctl_openshift_custom.yaml"&gt;customized KFDef resource&lt;/a&gt; to the cluster:&lt;/li&gt; &lt;/ol&gt; &lt;pre style="padding-left: 40px;"&gt;$ oc apply -f https://raw.githubusercontent.com/vpavlin/odh-manifests-overlays/master/kfdef/kfctl_openshift_custom.yaml&lt;/pre&gt; &lt;p style="padding-left: 40px;"&gt;The customized ConfigMap should appear in the cluster:&lt;/p&gt; &lt;pre style="padding-left: 40px;"&gt;$ oc describe cm jupyterhub-cfg&lt;/pre&gt; &lt;ol start="3"&gt; &lt;li&gt;You can also view the added ConfigMap by running the following command:&lt;/li&gt; &lt;/ol&gt; &lt;pre style="padding-left: 40px;"&gt;$ oc describe cm jupyterhub-additional-singleuser-profiles&lt;/pre&gt; &lt;h2&gt;Kubeflow&lt;/h2&gt; &lt;p&gt;At the beginning of this article, I promised you’d learn how to customize the Kubeflow deployments as well. Yet, I haven&amp;#8217;t even mentioned Kubeflow. This is because you can apply anything regarding the Open Data Hub to &lt;a target="_blank" rel="nofollow" href="https://github.com/kubeflow/manifests/"&gt;Kubeflow manifests&lt;/a&gt; thanks to Open Data Hub adopting Kubeflow deployment tools. Both repositories follow the same structure and leverage the same patterns for component definition and customization. (See &lt;a href="https://developers.redhat.com/blog/2020/05/07/open-data-hub-0-6-brings-component-updates-and-kubeflow-architecture/"&gt;&amp;#8220;Open Data Hub 0.6 brings component updates and Kubeflow architecture&amp;#8221;&lt;/a&gt; for more details.)&lt;/p&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;In this article, I introduced three different ways to customize and maintain the changes to individual Open Data Hub deployments. These are to directly edit manifests in a fork, to create repositories with overrides, and to add overlays.&lt;/p&gt; &lt;p&gt;&lt;a target="_blank" rel="nofollow" href="https://opendatahub.io/docs/administration/installation-customization/customization.html"&gt;The Open Data Hub documentation&lt;/a&gt; only talks about one of those in detail: the overlays. We believe it is the most flexible, maintainable, and convenient of all three. This is also what we recommend for the internal deployment of the Open Data Hub at Red Hat. The Internal Data Hub team maintains a fork of the odh-manifests repository and uses overlays to customize the default configuration to fit the needs of this production deployment.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F23%2Fopen-data-hub-and-kubeflow-installation-customization%2F&amp;#38;linkname=Open%20Data%20Hub%20and%20Kubeflow%20installation%20customization" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F23%2Fopen-data-hub-and-kubeflow-installation-customization%2F&amp;#38;linkname=Open%20Data%20Hub%20and%20Kubeflow%20installation%20customization" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F23%2Fopen-data-hub-and-kubeflow-installation-customization%2F&amp;#38;linkname=Open%20Data%20Hub%20and%20Kubeflow%20installation%20customization" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F23%2Fopen-data-hub-and-kubeflow-installation-customization%2F&amp;#38;linkname=Open%20Data%20Hub%20and%20Kubeflow%20installation%20customization" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F23%2Fopen-data-hub-and-kubeflow-installation-customization%2F&amp;#38;linkname=Open%20Data%20Hub%20and%20Kubeflow%20installation%20customization" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F23%2Fopen-data-hub-and-kubeflow-installation-customization%2F&amp;#38;linkname=Open%20Data%20Hub%20and%20Kubeflow%20installation%20customization" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F23%2Fopen-data-hub-and-kubeflow-installation-customization%2F&amp;#38;linkname=Open%20Data%20Hub%20and%20Kubeflow%20installation%20customization" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F23%2Fopen-data-hub-and-kubeflow-installation-customization%2F&amp;#038;title=Open%20Data%20Hub%20and%20Kubeflow%20installation%20customization" data-a2a-url="https://developers.redhat.com/blog/2020/07/23/open-data-hub-and-kubeflow-installation-customization/" data-a2a-title="Open Data Hub and Kubeflow installation customization"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/07/23/open-data-hub-and-kubeflow-installation-customization/"&gt;Open Data Hub and Kubeflow installation customization&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/jzm-GUPYJQI" height="1" width="1" alt=""/&gt;</content><summary>The main goal of Kubernetes is to reach the desired state: to deploy our pods, set up the network, and provide storage. This paradigm extends to Operators, which use custom resources to define the state. When the Operator picks up the custom resource, it will always try to get to the state defined by it. That means that if we modify a resource that is managed by the Operator, it will quickly repla...</summary><dc:creator>Václav Pavlín</dc:creator><dc:date>2020-07-23T07:00:30Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/07/23/open-data-hub-and-kubeflow-installation-customization/</feedburner:origLink></entry><entry><title>Anchored keys - scaling up a cluster without transferring values</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/MZcn4spSu-A/" /><category term="anchored keys" scheme="searchisko:content:tags" /><category term="feed_group_name_infinispan" scheme="searchisko:content:tags" /><category term="feed_name_infinispan" scheme="searchisko:content:tags" /><category term="state transfer" scheme="searchisko:content:tags" /><author><name>Dan Berindei</name></author><id>searchisko:content:id:jbossorg_blog-anchored_keys_scaling_up_a_cluster_without_transferring_values</id><updated>2020-07-27T12:42:34Z</updated><published>2020-07-22T12:00:00Z</published><content type="html">&lt;div class="sect1"&gt; &lt;h2 id="_background"&gt;&lt;a class="anchor" href="#_background" /&gt;Background&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For background, the preferred way to scale up the storage capacity of a Infinispan cluster is to use distributed caches. A distributed cache stores each key/value pair on &lt;code&gt;num-owners&lt;/code&gt; nodes, and each node can compute the location of a key (aka the key owners) directly.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Infinispan achieves this by statically mapping cache keys to &lt;code&gt;num-segments&lt;/code&gt; &lt;strong&gt;consistent hash segments&lt;/strong&gt;, and then dynamically mapping segments to nodes based on the cache’s &lt;strong&gt;topology&lt;/strong&gt; (roughly the current plus the historical membership of the cache). Whenever a new node joins the cluster, the cache is &lt;strong&gt;rebalanced&lt;/strong&gt;, and the new node replaces an existing node as the owner of some segments. The key/value pairs in those segments are copied to the new node and removed from the no-longer-owner node via &lt;strong&gt;state transfer&lt;/strong&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class="admonitionblock note"&gt; &lt;table&gt; &lt;tr&gt; &lt;td class="icon"&gt; &lt;i class="fa icon-note" title="Note" /&gt; &lt;/td&gt; &lt;td class="content"&gt; Because the allocation of segments to nodes is based on random UUIDs generated at start time, it is common (though less so after &lt;a href="https://issues.redhat.com/browse/ISPN-11679"&gt;ISPN-11679&lt;/a&gt; ), for segments to also move from one old node to another old node. &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_architecture"&gt;&lt;a class="anchor" href="#_architecture" /&gt;Architecture&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The basic idea is to skip the static mapping of keys to segments and to map keys directly to nodes.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;When a key/value pair is inserted into the cache, the newest member becomes the &lt;strong&gt;anchor owner&lt;/strong&gt; of that key, and the only node storing the actual value. In order to make the anchor location available without an extra remote lookup, all the other nodes store a reference to the anchor owner.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;That way, when another node joins, it only needs to receive the location information from the existing nodes, and values can stay on the anchor owner, minimizing the amount of traffic.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_limitations"&gt;&lt;a class="anchor" href="#_limitations" /&gt;Limitations&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="dlist"&gt; &lt;dl&gt; &lt;dt class="hdlist1"&gt;Only one node can be added at a time&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;An external actor (e.g. a Kubernetes/OpenShift operator, or a human administrator) must monitor the load on the current nodes, and add a new node whenever the newest node is close to "full".&lt;/p&gt; &lt;/dd&gt; &lt;/dl&gt; &lt;/div&gt; &lt;div class="admonitionblock note"&gt; &lt;table&gt; &lt;tr&gt; &lt;td class="icon"&gt; &lt;i class="fa icon-note" title="Note" /&gt; &lt;/td&gt; &lt;td class="content"&gt; Because the anchor owner information is replicated on all the nodes, and values are never moved off a node, the memory usage of each node will keep growing as new entries and nodes are added. &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/div&gt; &lt;div class="dlist"&gt; &lt;dl&gt; &lt;dt class="hdlist1"&gt;There is no redundancy&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Every value is stored on a single node. When a node crashes or even stops gracefully, the values stored on that node are lost.&lt;/p&gt; &lt;/dd&gt; &lt;dt class="hdlist1"&gt;Transactions are not supported&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;A later version may add transaction support, but the fact that any node stop or crash loses entries makes transactions a lot less valuable compared to a distributed cache.&lt;/p&gt; &lt;/dd&gt; &lt;dt class="hdlist1"&gt;Hot Rod clients do not know the anchor owner&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Hot Rod clients cannot use the topology information from the servers to locate the anchor owner. Instead, the server receiving a Hot Rod get request must make an additional request to the anchor owner in order to retrieve the value.&lt;/p&gt; &lt;/dd&gt; &lt;/dl&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_configuration"&gt;&lt;a class="anchor" href="#_configuration" /&gt;Configuration&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The module is still very young and does not yet support many Infinispan features.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Eventually, if it proves useful, it may become another cache mode, just like scattered caches. For now, configuring a cache with anchored keys requires a replicated cache with a custom element &lt;code&gt;anchored-keys&lt;/code&gt;:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="CodeRay highlight nowrap"&gt;&lt;code data-lang="xml"&gt;&lt;span class="preprocessor"&gt;&amp;lt;?xml version="1.0" encoding="UTF-8"?&amp;gt;&lt;/span&gt; &lt;span class="tag"&gt;&amp;lt;infinispan&lt;/span&gt; &lt;span class="attribute-name"&gt;xmlns&lt;/span&gt;=&lt;span class="string"&gt;&lt;span class="delimiter"&gt;"&lt;/span&gt;&lt;span class="content"&gt;urn:infinispan:config:11.0&lt;/span&gt;&lt;span class="delimiter"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="attribute-name"&gt;xmlns:anchored&lt;/span&gt;=&lt;span class="string"&gt;&lt;span class="delimiter"&gt;"&lt;/span&gt;&lt;span class="content"&gt;urn:infinispan:config:anchored:11.0&lt;/span&gt;&lt;span class="delimiter"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="attribute-name"&gt;xmlns:xsi&lt;/span&gt;=&lt;span class="string"&gt;&lt;span class="delimiter"&gt;"&lt;/span&gt;&lt;span class="content"&gt;http://www.w3.org/2001/XMLSchema-instance&lt;/span&gt;&lt;span class="delimiter"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="attribute-name"&gt;xsi:schemaLocation&lt;/span&gt;=&lt;span class="string"&gt;&lt;span class="delimiter"&gt;"&lt;/span&gt;&lt;span class="content"&gt;urn:infinispan:config:11.0&lt;/span&gt; &lt;span class="content"&gt;https://infinispan.org/schemas/infinispan-config-11.0.xsd&lt;/span&gt; &lt;span class="content"&gt;urn:infinispan:config:anchored:11.0&lt;/span&gt; &lt;span class="content"&gt;https://infinispan.org/schemas/infinispan-anchored-config-11.0.xsd&lt;/span&gt;&lt;span class="delimiter"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="tag"&gt;&amp;gt;&lt;/span&gt; &lt;span class="tag"&gt;&amp;lt;cache-container&lt;/span&gt; &lt;span class="attribute-name"&gt;default-cache&lt;/span&gt;=&lt;span class="string"&gt;&lt;span class="delimiter"&gt;"&lt;/span&gt;&lt;span class="content"&gt;default&lt;/span&gt;&lt;span class="delimiter"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="tag"&gt;&amp;gt;&lt;/span&gt; &lt;span class="tag"&gt;&amp;lt;transport&lt;/span&gt;&lt;span class="tag"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="tag"&gt;&amp;lt;replicated-cache&lt;/span&gt; &lt;span class="attribute-name"&gt;name&lt;/span&gt;=&lt;span class="string"&gt;&lt;span class="delimiter"&gt;"&lt;/span&gt;&lt;span class="content"&gt;default&lt;/span&gt;&lt;span class="delimiter"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="tag"&gt;&amp;gt;&lt;/span&gt; &lt;span class="tag"&gt;&amp;lt;anchored:anchored-keys&lt;/span&gt;&lt;span class="tag"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="tag"&gt;&amp;lt;/replicated-cache&amp;gt;&lt;/span&gt; &lt;span class="tag"&gt;&amp;lt;/cache-container&amp;gt;&lt;/span&gt; &lt;span class="tag"&gt;&amp;lt;/infinispan&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;When the &lt;code&gt;&amp;lt;anchored-keys/&amp;gt;&lt;/code&gt; element is present, the module automatically enables anchored keys and makes some required configuration changes:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Disables &lt;code&gt;await-initial-transfer&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Enables conflict resolution with the equivalent of&lt;/p&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;code&gt;&amp;lt;partition-handling when-split="ALLOW_READ_WRITES" merge-policy="PREFER_NON_NULL"/&amp;gt;&lt;/code&gt;&lt;/p&gt; &lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The cache will fail to start if these attributes are explicitly set to other values, if state transfer is disabled, or if transactions are enabled.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_implementation_status"&gt;&lt;a class="anchor" href="#_implementation_status" /&gt;Implementation status&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Basic operations are implemented: &lt;code&gt;put&lt;/code&gt;, &lt;code&gt;putIfAbsent&lt;/code&gt;, &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;replace&lt;/code&gt;, &lt;code&gt;remove&lt;/code&gt;, &lt;code&gt;putAll&lt;/code&gt;, &lt;code&gt;getAll&lt;/code&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="_functional_commands"&gt;&lt;a class="anchor" href="#_functional_commands" /&gt;Functional commands&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The &lt;code&gt;FunctionalMap&lt;/code&gt; API is not implemented.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Other operations that rely on the functional API’s implementation do not work either: &lt;code&gt;merge&lt;/code&gt;, &lt;code&gt;compute&lt;/code&gt;, &lt;code&gt;computeIfPresent&lt;/code&gt;, &lt;code&gt;computeIfAbsent&lt;/code&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="_partition_handling"&gt;&lt;a class="anchor" href="#_partition_handling" /&gt;Partition handling&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;When a node crashes, surviving nodes do not remove anchor references pointing to that node. In theory, this could allow merges to skip conflict resolution, but currently the &lt;code&gt;PREFERRED_NON_NULL&lt;/code&gt; merge policy is configured automatically and cannot be changed.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="_listeners"&gt;&lt;a class="anchor" href="#_listeners" /&gt;Listeners&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Cluster listeners and client listeners are implemented and receive the correct notifications.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Non-clustered embedded listeners currently receive notifications on all the nodes, not just the node where the value is stored.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_performance_considerations"&gt;&lt;a class="anchor" href="#_performance_considerations" /&gt;Performance considerations&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="sect2"&gt; &lt;h3 id="_clientserver_latency"&gt;&lt;a class="anchor" href="#_clientserver_latency" /&gt;Client/Server Latency&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The client always contacts the primary owner, so any read has a &lt;code&gt;(N-1)/N&lt;/code&gt; probability of requiring a unicast RPC from the primary to the anchor owner.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Writes require the primary to send the value to one node and the anchor address to all the other nodes, which is currently done with &lt;code&gt;N-1&lt;/code&gt; unicast RPCs.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;In theory we could send in parallel one unicast RPC for the value and one multicast RPC for the address, but that would need additional logic to ignore the address on the anchor owner and with TCP multicast RPCs are implemented as parallel unicasts anyway.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="_memory_overhead"&gt;&lt;a class="anchor" href="#_memory_overhead" /&gt;Memory overhead&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Compared to a distributed cache with one owner, an anchored-keys cache contains copies of all the keys and their locations, plus the overhead of the cache itself.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Therefore, a node with anchored-keys caches should stop accepting new entries when it has less than &lt;code&gt;(&amp;lt;key size&amp;gt; + &amp;lt;per-key overhead&amp;gt;) * &amp;lt;number of entries not yet inserted&amp;gt;&lt;/code&gt; bytes available.&lt;/p&gt; &lt;/div&gt; &lt;div class="admonitionblock note"&gt; &lt;table&gt; &lt;tr&gt; &lt;td class="icon"&gt; &lt;i class="fa icon-note" title="Note" /&gt; &lt;/td&gt; &lt;td class="content"&gt; The number of entries not yet inserted is obviously very hard to estimate. In the future we may provide a way to limit the overhead of key location information, e.g. by using a distributed cache. &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The per-key overhead is lowest for off-heap storage, around 63 bytes: 8 bytes for the entry reference in &lt;code&gt;MemoryAddressHash.memory&lt;/code&gt;, 29 bytes for the off-heap entry header, and 26 bytes for the serialized &lt;code&gt;RemoteMetadata&lt;/code&gt; with the owner’s address.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The per-key overhead of the ConcurrentHashMap-based on-heap cache, assuming a 64-bit JVM with compressed OOPS, would be around 92 bytes: 32 bytes for &lt;code&gt;ConcurrentHashMap.Node&lt;/code&gt;, 32 bytes for &lt;code&gt;MetadataImmortalCacheEntry&lt;/code&gt;, 24 bytes for &lt;code&gt;RemoteMetadata&lt;/code&gt;, and 4 bytes in the &lt;code&gt;ConcurrentHashMap.table&lt;/code&gt; array.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="_state_transfer"&gt;&lt;a class="anchor" href="#_state_transfer" /&gt;State transfer&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;State transfer does not transfer the actual values, but it still needs to transfer all the keys and the anchor owner information.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Assuming that the values are much bigger compared to the keys, the anchor cache’s state transfer should also be much faster compared to the state transfer of a distributed cache of a similar size. But for small values, there may not be a visible improvement.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The initial state transfer does not block a joiner from starting, because it will just ask another node for the anchor owner. However, the remote lookups can be expensive, especially in embedded mode, but also in server mode, if the client is not &lt;code&gt;HASH_DISTRIBUTION_AWARE&lt;/code&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/MZcn4spSu-A" height="1" width="1" alt=""/&gt;</content><summary>Background For background, the preferred way to scale up the storage capacity of a Infinispan cluster is to use distributed caches. A distributed cache stores each key/value pair on num-owners nodes, and each node can compute the location of a key (aka the key owners) directly. Infinispan achieves this by statically mapping cache keys to num-segments consistent hash segments, and then dynamically ...</summary><dc:creator>Dan Berindei</dc:creator><dc:date>2020-07-22T12:00:00Z</dc:date><feedburner:origLink>http://infinispan.org/blog/2020/07/22/anchored-keys/</feedburner:origLink></entry><entry><title>Keycloak 11.0.0 released</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/SMq5Uh6Yxnk/keycloak-1100-released.html" /><category term="feed_group_name_keycloak" scheme="searchisko:content:tags" /><category term="feed_name_keycloak" scheme="searchisko:content:tags" /><category term="Keycloak Release" scheme="searchisko:content:tags" /><author><name>Keycloak</name></author><id>searchisko:content:id:jbossorg_blog-keycloak_11_0_0_released</id><updated>2020-07-22T00:00:00Z</updated><published>2020-07-22T00:00:00Z</published><content type="html">&lt;p&gt;To download the release go to &lt;a href="https://www.keycloak.org//downloads.html"&gt;Keycloak downloads&lt;/a&gt;.&lt;/p&gt; &lt;div class="sect1"&gt; &lt;h2 id="_highlights"&gt;Highlights&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="sect2"&gt; &lt;h3 id="_ldapv3_password_modify_operation"&gt;LDAPv3 password modify operation&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Support for LDAPv3 password modify operation was added. Also the ability in the admin console to request metadata from the configured LDAP server to see if it supports LDAPv3 password modify operation.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Thanks to &lt;a href="https://github.com/cachescrubber"&gt;cachescrubber&lt;/a&gt;&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="_namespace_support_for_ldap_group_mapper"&gt;Namespace support for LDAP group mapper&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Namespace support for LDAP group mapper allows you to map groups from LDAP under specified branch (namespace) of the Keycloak groups tree. Previously groups from LDAP were always added as the top level groups in Keycloak.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Thanks to &lt;a href="https://github.com/tjuerge"&gt;Torsten Juergeleit&lt;/a&gt;&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="_upgrade_to_wildfly_20"&gt;Upgrade to WildFly 20&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Keycloak server was upgraded to use WildFly 20.0.1.Final under the covers. For more details, please take a look at &lt;a href="https://www.keycloak.org/docs/latest/upgrading/"&gt;Upgrading Guide&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="_other_improvements"&gt;Other improvements&lt;/h3&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Support for client offline session lifespan. Thanks to &lt;a href="https://github.com/y-tabata"&gt;Yoshiyuki Tabata&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Czech translation. Thanks to &lt;a href="https://github.com/jakubknejzlik"&gt;Jakub Knejzlík&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Possibility to fetch additional fields from the Facebook identity provider. Thanks to &lt;a href="https://github.com/BartoszSiemienczuk"&gt;Bartosz Siemieńczuk&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Support for AES 192 and AES 256 algorithms used for signed and encrypted ID tokens. Thanks to &lt;a href="https://github.com/tnorimat"&gt;Takashi Norimatsu&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Ability to specify signature algorithm in Signed JWT Client Authentication. Thanks to &lt;a href="https://github.com/tnorimat"&gt;Takashi Norimatsu&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h2&gt;All resolved issues&lt;/h2&gt; &lt;p&gt;The full list of resolved issues are available in &lt;a href="https://issues.jboss.org/issues/?jql=project%20%3D%20keycloak%20and%20fixVersion%20%3D%2011.0.0"&gt;JIRA&lt;/a&gt;&lt;/p&gt; &lt;h2&gt;Upgrading&lt;/h2&gt; &lt;p&gt;Before you upgrade remember to backup your database and check the &lt;a href="https://www.keycloak.org//docs/latest/upgrading/index.html"&gt;upgrade guide&lt;/a&gt; for anything that may have changed.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/SMq5Uh6Yxnk" height="1" width="1" alt=""/&gt;</content><summary>To download the release go to Keycloak downloads. Highlights LDAPv3 password modify operation Support for LDAPv3 password modify operation was added. Also the ability in the admin console to request metadata from the configured LDAP server to see if it supports LDAPv3 password modify operation. Thanks to cachescrubber Namespace support for LDAP group mapper Namespace support for LDAP group mapper ...</summary><dc:creator>Keycloak</dc:creator><dc:date>2020-07-22T00:00:00Z</dc:date><feedburner:origLink>https://www.keycloak.org//2020/07/keycloak-1100-released.html</feedburner:origLink></entry><entry><title>New features in Red Hat CodeReady Studio 12.16.0.GA and JBoss Tools 4.16.0.Final for Eclipse 2020-06</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/KDIbwUVsn-g/" /><category term="codeready" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="Developer Tools" scheme="searchisko:content:tags" /><category term="Eclipse IDE" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="jakarta ee" scheme="searchisko:content:tags" /><category term="Java" scheme="searchisko:content:tags" /><category term="JavaEE" scheme="searchisko:content:tags" /><category term="JBoss Tools" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="linux" scheme="searchisko:content:tags" /><category term="Mac" scheme="searchisko:content:tags" /><category term="odo" scheme="searchisko:content:tags" /><category term="OpenShift 4" scheme="searchisko:content:tags" /><category term="quarkus" scheme="searchisko:content:tags" /><category term="windows" scheme="searchisko:content:tags" /><author><name>Jeff Maury</name></author><id>searchisko:content:id:jbossorg_blog-new_features_in_red_hat_codeready_studio_12_16_0_ga_and_jboss_tools_4_16_0_final_for_eclipse_2020_06</id><updated>2020-07-21T13:57:00Z</updated><published>2020-07-21T13:57:00Z</published><content type="html">&lt;p&gt;&lt;a target="_blank" rel="nofollow" href="https://tools.jboss.org/downloads/jbosstools/2020-06/4.16.0.Final.html"&gt;JBoss Tools 4.16.0&lt;/a&gt; and &lt;a href="https://developers.redhat.com/products/codeready-studio/overview"&gt;Red Hat CodeReady Studio 12.16&lt;/a&gt; for Eclipse 4.16 (2020-06) are now available. For this release, we focused on improving &lt;a href="https://developers.redhat.com/products/quarkus/getting-started"&gt;Quarkus&lt;/a&gt;&amp;#8211; and container-based development and fixing bugs. We also updated the &lt;a target="_blank" rel="nofollow" href="https://tools.jboss.org/features/hibernate.html"&gt;Hibernate Tools&lt;/a&gt; runtime provider and Java Developer Tools (JDT) extensions, which are now compatible with &lt;a href="https://developers.redhat.com/topics/enterprise-java"&gt;Java&lt;/a&gt; 14. Additionally, we made many changes to platform views, dialogs, and toolbars in the user interface (UI).&lt;/p&gt; &lt;p&gt;This article is an overview of what&amp;#8217;s new in JBoss Tools 4.16.0 and Red Hat CodeReady Studio 12.16 for Eclipse 4.16 (2020-06).&lt;/p&gt; &lt;h2&gt;Installation&lt;/h2&gt; &lt;p&gt;First, let&amp;#8217;s look at how to install these updates. CodeReady Studio (previously Red Hat Developer Studio) comes with everything pre-bundled in its installer. Simply download the installer from the &lt;a href="https://developers.redhat.com/products/codeready-studio/overview"&gt;Red Hat CodeReady Studio product page&lt;/a&gt; and run it as follows:&lt;/p&gt; &lt;p&gt;&lt;span id="more-750567"&gt;&lt;/span&gt;&lt;/p&gt; &lt;pre&gt;$ java -jar codereadystudio-&amp;#60;installername&amp;#62;.jar &lt;/pre&gt; &lt;p&gt;Installing JBoss Tools 4.16.0—aka &amp;#8220;bring-your-own Eclipse (BYOE) CodeReady Studio&amp;#8221;—requires a bit more effort. This release requires at least Eclipse 4.16 (2020-06), but we recommend installing the latest &lt;a href="http://www.eclipse.org/downloads/packages/release/2020-06/r/eclipse-ide-java-ee-developers"&gt;Eclipse 4.16 2020-06 Java EE bundle&lt;/a&gt;. Installing the newest bundle ensures that you get the most current Java dependencies.&lt;/p&gt; &lt;p&gt;Once you have Eclipse 4.16 (2020-06) or higher installed, you can open the &lt;strong&gt;Eclipse Marketplace&lt;/strong&gt; tab and look for either &lt;strong&gt;JBoss Tools&lt;/strong&gt; or &lt;strong&gt;Red Hat CodeReady Studio&lt;/strong&gt;. Alternatively, you could &lt;a target="_blank" rel="nofollow" href="http://download.jboss.org/jbosstools/photon/stable/updates/"&gt;download JBoss Tools 4.16.0&lt;/a&gt; directly from our update site.&lt;/p&gt; &lt;p&gt;In the next sections, we&amp;#8217;ll look at updates for the new Red Hat OpenShift 4.5 release and improvements to Quarkus and container-based development. We&amp;#8217;ll also look at updates to the Hibernate Tools runtime provider, and to the Java Developer Tools package for JDK 14.&lt;/p&gt; &lt;h2&gt;OpenShift&lt;/h2&gt; &lt;p&gt;We&amp;#8217;ve added secure URL support and support for the new &lt;a href="https://developers.redhat.com/products/openshift/getting-started"&gt;Red Hat OpenShift Container Platform 4.5&lt;/a&gt; to this release.&lt;/p&gt; &lt;h3&gt;Secure URL support&lt;/h3&gt; &lt;p&gt;It is now possible to create secured URLs in OpenShift&amp;#8217;s Application Explorer view. If you select this option, the created URL will be accessible through &lt;code&gt;https&lt;/code&gt;, as shown in Figure 1:&lt;/p&gt; &lt;div id="attachment_750577" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081ba53dc07.png"&gt;&lt;img aria-describedby="caption-attachment-750577" class="wp-image-750577" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081ba53dc07.png" alt="A screenshot of the &amp;#34;Create a URL&amp;#34; dialog." width="640" height="442" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081ba53dc07.png 684w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081ba53dc07-300x207.png 300w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750577" class="wp-caption-text"&gt;Figure 1: Create a secured URL in OpenShift&amp;#8217;s Application Explorer view.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;When a URL is displayed in the tree, the icon now has a secure lock indicator, shown in Figure 2:&lt;/p&gt; &lt;div id="attachment_750587" style="width: 288px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081bcc5595c.png"&gt;&lt;img aria-describedby="caption-attachment-750587" class="wp-image-750587 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081bcc5595c.png" alt="A screenshot of the URL in a tree, with the secure lock indicator." width="278" height="118" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750587" class="wp-caption-text"&gt;Figure 2: The secure lock indicator in the URL tree.&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;OpenShift Container Platform 4.5&lt;/h3&gt; &lt;p&gt;Red Hat OpenShift Container Platform (OCP) 4.5 is now available, and JBoss Tools is transparently compatible with this major release. Just define your connection to your OCP 4.4-based cluster the same way that you did for an OCP 3 cluster, and use the tooling!&lt;/p&gt; &lt;h2&gt;Server tools&lt;/h2&gt; &lt;p&gt;We&amp;#8217;ve made one update to the server tools for this release, adding a server adapter for WildFly 20. The new server adapter adds support for Java EE 8, Jakarta EE 8, and MicroProfile 3.3.&lt;/p&gt; &lt;h2&gt;Hibernate Tools&lt;/h2&gt; &lt;p&gt;We made the following additions and updates to the available Hibernate Tools runtime providers:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;The Hibernate 5.4 runtime provider now incorporates Hibernate Core version 5.4.17.Final and Hibernate Tools version 5.4.17.Final.&lt;/li&gt; &lt;li&gt;The Hibernate 5.3 runtime provider now incorporates Hibernate Core version 5.3.17.Final and Hibernate Tools version 5.3.17.Final.&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;Platform&lt;/h2&gt; &lt;p&gt;We made many changes to platform views, dialogs, and toolbars in the UI, which I&amp;#8217;ll discuss in the next sections.&lt;/p&gt; &lt;h3&gt;Views, dialogs, and toolbars&lt;/h3&gt; &lt;p&gt;You can now use the New File wizard to create missing folders directly, without explicitly creating folders beforehand. The screenshot in Figure 3 shows the New File wizard:&lt;/p&gt; &lt;div id="attachment_750597" style="width: 356px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081cbf35b98.png"&gt;&lt;img aria-describedby="caption-attachment-750597" class="wp-image-750597 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081cbf35b98.png" alt="A screenshot of the New File wizard." width="346" height="526" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081cbf35b98.png 346w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081cbf35b98-197x300.png 197w" sizes="(max-width: 346px) 100vw, 346px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750597" class="wp-caption-text"&gt;Figure 3: Use the New File wizard to create missing folders.&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;Text editors&lt;/h3&gt; &lt;p&gt;Linux and Mac OS already supported this feature, and now we&amp;#8217;ve added support for font ligatures on Windows in Eclipse. Use the following preference to specify the font with ligatures that you want for your text editors:&lt;/p&gt; &lt;p&gt;&lt;strong&gt;General &amp;#62; Appearance &amp;#62; Colors and Font &amp;#62; Basic &amp;#62; Text Font&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Figure 4 shows a screenshot of ligatures rendered in the Java editor on Windows 10:&lt;/p&gt; &lt;div id="attachment_750607" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081cf3b2b48.png"&gt;&lt;img aria-describedby="caption-attachment-750607" class="wp-image-750607" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081cf3b2b48.png" alt="A screenshot of ligatures rendered in the Java editor on Windows 10." width="640" height="297" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081cf3b2b48.png 665w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081cf3b2b48-300x139.png 300w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750607" class="wp-caption-text"&gt;Figure 4: Ligatures rendered in the Java editor on Windows 10.&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;Themes and styling&lt;/h3&gt; &lt;p&gt;The Eclipse dark theme now uses the Windows-native dark scrollbars. We also retired the software solution for the editor area. Figure 5 shows an open project with the new dark scrollbar:&lt;/p&gt; &lt;div id="attachment_750617" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081d1d5586a.png"&gt;&lt;img aria-describedby="caption-attachment-750617" class="wp-image-750617" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081d1d5586a.png" alt="A screenshot of an open project with the new dark scrollbar." width="640" height="560" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081d1d5586a.png 700w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081d1d5586a-300x263.png 300w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750617" class="wp-caption-text"&gt;Figure 5: An open project with the new dark scrollbar.&lt;/p&gt;&lt;/div&gt; &lt;h4&gt;Eclipse Windows toolbar styling aligned with Windows 10&lt;/h4&gt; &lt;p&gt;We updated the default Eclipse light theme to align better with Windows 10&amp;#8217;s default theme. Figure 6 shows the old light theme:&lt;/p&gt; &lt;div id="attachment_750627" style="width: 546px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081d413022b.png"&gt;&lt;img aria-describedby="caption-attachment-750627" class="wp-image-750627 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081d413022b.png" alt="A screenshot of the old light theme." width="536" height="534" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081d413022b.png 536w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081d413022b-150x150.png 150w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081d413022b-300x300.png 300w" sizes="(max-width: 536px) 100vw, 536px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750627" class="wp-caption-text"&gt;Figure 6: The old light theme.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Figure 7 shows the new light theme:&lt;/p&gt; &lt;div id="attachment_750637" style="width: 544px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081d5aa3a5d.png"&gt;&lt;img aria-describedby="caption-attachment-750637" class="wp-image-750637 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081d5aa3a5d.png" alt="A screenshot of the new light theme." width="534" height="537" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081d5aa3a5d.png 534w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081d5aa3a5d-150x150.png 150w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081d5aa3a5d-298x300.png 298w" sizes="(max-width: 534px) 100vw, 534px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750637" class="wp-caption-text"&gt;Figure 7: The new light theme.&lt;/p&gt;&lt;/div&gt; &lt;h4&gt;Square tabs for views&lt;/h4&gt; &lt;p&gt;By default, the Eclipse IDE now uses square tabs for views, as shown in Figure 8:&lt;/p&gt; &lt;div id="attachment_750647" style="width: 615px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081d8782b8b.png"&gt;&lt;img aria-describedby="caption-attachment-750647" class="wp-image-750647 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081d8782b8b.png" alt="A screenshot of the Eclipse IDE with square tabs for views." width="605" height="141" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081d8782b8b.png 605w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081d8782b8b-300x70.png 300w" sizes="(max-width: 605px) 100vw, 605px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750647" class="wp-caption-text"&gt;Figure 8: The Eclipse IDE now uses square tabs for views.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;We also added a preference for users who want to switch back to using round tabs, as shown in Figure 9:&lt;/p&gt; &lt;div id="attachment_750657" style="width: 458px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081d9f98b97.png"&gt;&lt;img aria-describedby="caption-attachment-750657" class="wp-image-750657 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081d9f98b97.png" alt="A screenshot of the option to use round tabs." width="448" height="193" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081d9f98b97.png 448w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081d9f98b97-300x129.png 300w" sizes="(max-width: 448px) 100vw, 448px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750657" class="wp-caption-text"&gt;Figure 9. Users can select the preference for round tabs.&lt;/p&gt;&lt;/div&gt; &lt;h4&gt;Consistent toolbar colors in dark theme&lt;/h4&gt; &lt;p&gt;The toolbar styling in the dark theme is consistent with these updates, as shown in Figure 10:&lt;/p&gt; &lt;div id="attachment_750667" style="width: 257px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081dc03f106.png"&gt;&lt;img aria-describedby="caption-attachment-750667" class="wp-image-750667 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081dc03f106.png" alt="A screenshot of square tabs in the Eclipse dark theme." width="247" height="118" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750667" class="wp-caption-text"&gt;Figure 10: Square tabs in the Eclipse dark theme.&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;Preferences&lt;/h3&gt; &lt;p&gt;We&amp;#8217;ve made a number of changes and additions to the platform preferences.&lt;/p&gt; &lt;h4&gt;Verify installation operations against the current JRE&lt;/h4&gt; &lt;p&gt;On by default, the &lt;strong&gt;Verify provisioning operation is compatible with current running JRE &lt;/strong&gt;option is available from the Install/Update preferences page. This option enables extra checks when installing, updating, or uninstalling content that is required to run the IDE. It uses the standard dialogs to report an error. If any newly installed unit requires a different Java runtime from the one that&amp;#8217;s currently in use, the operation will fail with a useful message. Figure 11 shows the Install/Update preferences page with the new option:&lt;/p&gt; &lt;div id="attachment_750677" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081df230ed8.png"&gt;&lt;img aria-describedby="caption-attachment-750677" class="wp-image-750677" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081df230ed8.png" alt="A screenshot of the Install/Update preferences page with the option to verify compatible provisioning." width="640" height="324" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081df230ed8.png 666w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081df230ed8-300x152.png 300w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750677" class="wp-caption-text"&gt;Figure 11: The Install/Update preferences page with the option to verify compatible provisioning.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Figure 12 shows the error message after attempting to install a unit that requires Java 14 while running the Eclipse IDE with an older Java version:&lt;/p&gt; &lt;div id="attachment_750687" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081e0cf2d7c.png"&gt;&lt;img aria-describedby="caption-attachment-750687" class="wp-image-750687" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081e0cf2d7c.png" alt="A screenshot of the error message with incompatible dependencies listed." width="640" height="570" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081e0cf2d7c.png 690w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081e0cf2d7c-300x267.png 300w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750687" class="wp-caption-text"&gt;Figure 12: The error message lists the incompatible dependencies.&lt;/p&gt;&lt;/div&gt; &lt;h4&gt;Renaming resources inline&lt;/h4&gt; &lt;p&gt;We added the option to either rename resources inline or use a dialog to rename them in the 4.15 release. Until now, it has been available as a radio button, but we changed it to a checkbox, as shown in Figure 13:&lt;/p&gt; &lt;div id="attachment_750697" style="width: 510px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081e34b977a.png"&gt;&lt;img aria-describedby="caption-attachment-750697" class="wp-image-750697 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081e34b977a.png" alt="A screenshot of &amp;#34;Rename resources inline&amp;#34; checkbox option." width="500" height="311" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081e34b977a.png 500w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081e34b977a-300x187.png 300w" sizes="(max-width: 500px) 100vw, 500px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750697" class="wp-caption-text"&gt;Figure 13: The &amp;#8216;Rename resources inline&amp;#8217; option is now a checkbox.&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;Debugging&lt;/h3&gt; &lt;p&gt;We added &lt;strong&gt;Select All&lt;/strong&gt; and &lt;strong&gt;Deselect All&lt;/strong&gt; buttons to the Import breakpoints wizard for debugging. You can now use these buttons to select or deselect all the breakpoint markers when importing breakpoints, as shown in Figure 14:&lt;/p&gt; &lt;div id="attachment_750707" style="width: 420px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081e60f1527.png"&gt;&lt;img aria-describedby="caption-attachment-750707" class="wp-image-750707 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081e60f1527.png" alt="A screenshot of the Import Breakpoints dialog with the new Select All and Deselect All options." width="410" height="447" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081e60f1527.png 410w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081e60f1527-275x300.png 275w" sizes="(max-width: 410px) 100vw, 410px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750707" class="wp-caption-text"&gt;Figure 14: Select All and Deselect All enable faster decisions when importing breakpoints.&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;General updates&lt;/h3&gt; &lt;p&gt;Two general updates are worth sharing.&lt;/p&gt; &lt;h4&gt;Show key bindings when invoking a command&lt;/h4&gt; &lt;p&gt;For presentations, screencasts, and for learning purposes, it is very helpful to show the corresponding key binding when invoking a command. We added that feature some releases ago, as shown in Figure 15:&lt;/p&gt; &lt;div id="attachment_750717" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081e96541d7.png"&gt;&lt;img aria-describedby="caption-attachment-750717" class="wp-image-750717 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081e96541d7-1024x332.png" alt="A screenshot of the key binding for the Quick Switch Editor command." width="640" height="208" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081e96541d7-1024x332.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081e96541d7-300x97.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081e96541d7-768x249.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081e96541d7.png 1315w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750717" class="wp-caption-text"&gt;Figure 15: Hover over a command to see the corresponding key binding.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;With the 4.16 release, it is now possible to enable this feature separately or together for keyboard interactions and mouse clicks. You can enable the feature for mouse clicks only, for keyboard interactions only, or for both. Showing key bindings only for mouse clicks is helpful for users who want to learn the existing key bindings.&lt;/p&gt; &lt;p&gt;Enable the &lt;b&gt;Show key binding when command is invoked&lt;/b&gt; feature via the Preferences dialog on the &lt;strong&gt;General &amp;#62; Keys&lt;/strong&gt; preference page. Use the command &lt;strong&gt;Toggle Show Key Bindings&lt;/strong&gt; to change this setting quickly. Figure 16 shows this option under the Find Actions dialog:&lt;/p&gt; &lt;div id="attachment_750727" style="width: 571px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081eb37b1cc.png"&gt;&lt;img aria-describedby="caption-attachment-750727" class="wp-image-750727 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081eb37b1cc.png" alt="A screenshot of key binding options under the Find Actions dialog." width="561" height="199" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081eb37b1cc.png 561w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081eb37b1cc-300x106.png 300w" sizes="(max-width: 561px) 100vw, 561px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750727" class="wp-caption-text"&gt;Figure 16: Key binding options under the Find Actions dialog.&lt;/p&gt;&lt;/div&gt; &lt;h4&gt;Ant 1.10.8&lt;/h4&gt; &lt;p&gt;Eclipse has adopted Ant version 1.10.8.&lt;/p&gt; &lt;h2&gt;Java Development Tools (JDT)&lt;/h2&gt; &lt;p&gt;The most significant Java Development Tools update is support for Java 14. Eclipse JDT now supports Java 14 for the Eclipse 4.16 release. The release notably includes the following Java 14 features:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;JEP 361: Switch expressions (Standard)&lt;/li&gt; &lt;li&gt;JEP 359: Records (Preview)&lt;/li&gt; &lt;li&gt;JEP 368: Text blocks (Second Preview)&lt;/li&gt; &lt;li&gt;JEP 305: Pattern matching for &lt;code&gt;Instanceof&lt;/code&gt; (Preview)&lt;/li&gt; &lt;/ul&gt; &lt;p style="padding-left: 40px;"&gt;&lt;b&gt;Note&lt;/b&gt;: The Preview option should be on for preview language features. For an informal introduction to the support, refer to the &lt;a target="_blank" rel="nofollow" href="https://wiki.eclipse.org/Java14/Examples"&gt;Java 14 examples wiki&lt;/a&gt;.&lt;/p&gt; &lt;h3&gt;How to set your JDK compliance to 14&lt;/h3&gt; &lt;p&gt;As shown in Figure 17, you can use &lt;strong&gt;Preferences &amp;#62; Java &amp;#62; Compiler&lt;/strong&gt; to set your JDK compiler compliance to 14 and then enable the preview features:&lt;/p&gt; &lt;div id="attachment_750737" style="width: 578px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081ef319772.png"&gt;&lt;img aria-describedby="caption-attachment-750737" class="wp-image-750737 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081ef319772.png" alt="A screenshot of the options to set the set the JDK compiler compliance to 14 and enable the preview features." width="568" height="167" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081ef319772.png 568w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081ef319772-300x88.png 300w" sizes="(max-width: 568px) 100vw, 568px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750737" class="wp-caption-text"&gt;Figure 17: Set your JDK compiler compliance to 14 and enable the preview features.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;You can create a new record in one of two ways: Using a template or using the Record Creation wizard.&lt;/p&gt; &lt;h4&gt;Use a template to create a new record&lt;/h4&gt; &lt;p&gt;You can use the &lt;code&gt;new_record&lt;/code&gt; template to create a record in an empty &lt;code&gt;.java&lt;/code&gt; file, as shown in Figure 18:&lt;/p&gt; &lt;div id="attachment_750747" style="width: 564px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081f0c6a548.png"&gt;&lt;img aria-describedby="caption-attachment-750747" class="wp-image-750747 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081f0c6a548.png" alt="A screenshot of the new_record template option." width="554" height="164" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081f0c6a548.png 554w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081f0c6a548-300x89.png 300w" sizes="(max-width: 554px) 100vw, 554px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750747" class="wp-caption-text"&gt;Figure 18: Use the new_record template to create a record in an empty .java file.&lt;/p&gt;&lt;/div&gt; &lt;h4&gt;Use the Record Creation wizard&lt;/h4&gt; &lt;p&gt;Alternatively, you can use the Record Creation wizard:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Right-click on the &lt;strong&gt;Project &amp;#62; New &amp;#62; Record&lt;/strong&gt;.&lt;/li&gt; &lt;li&gt;Right-click on the &lt;strong&gt;Project &amp;#62; New &amp;#62; Other and search for Record&lt;/strong&gt;.&lt;/li&gt; &lt;li&gt;Right-click on the &lt;strong&gt;Project &amp;#62; New &amp;#62; Other &amp;#62; Java &amp;#62; Record&lt;/strong&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;The Record Creation wizard comes up, as shown in Figure 19:&lt;/p&gt; &lt;div id="attachment_750757" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081f2568ca2.png"&gt;&lt;img aria-describedby="caption-attachment-750757" class="wp-image-750757" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081f2568ca2.png" alt="A screenshot of the Record Creation wizard." width="640" height="575" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081f2568ca2.png 686w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081f2568ca2-300x269.png 300w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750757" class="wp-caption-text"&gt;Figure 19: The Record Creation wizard.&lt;/p&gt;&lt;/div&gt; &lt;p style="padding-left: 40px;"&gt;&lt;b&gt;Note&lt;/b&gt;: In older workspaces, the &lt;strong&gt;Record&lt;/strong&gt; entry may not appear directly under the &lt;strong&gt;New&lt;/strong&gt; menu in the Java perspective. You can resolve this by either using a new workspace or launching Eclipse with the option &lt;code&gt;-clearPersistedState&lt;/code&gt; for your existing workspace.&lt;/p&gt; &lt;h3&gt;How to enable the JDK 14 preview features&lt;/h3&gt; &lt;p&gt;You can quickly enable the JDK 14 preview features for an applicable Java project by right-clicking on the project and selecting &lt;strong&gt;Configure &amp;#62; Enable preview features&lt;/strong&gt;, as shown in Figure 20:&lt;/p&gt; &lt;div id="attachment_750767" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081f3eb3406.png"&gt;&lt;img aria-describedby="caption-attachment-750767" class="wp-image-750767" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081f3eb3406.png" alt="A screenshot of an open Java project with the &amp;#34;Enable preview features&amp;#34; option selected." width="640" height="656" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081f3eb3406.png 690w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081f3eb3406-293x300.png 293w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750767" class="wp-caption-text"&gt;Figure 20: Enable the JDK 14 preview features for a Java project.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;As shown in Figure 21, you can also use the opened &lt;strong&gt;Project properties&lt;/strong&gt; dialog to change the default severity level to &amp;#8220;Warning&amp;#8221; for compilation issues with the preview features:&lt;/p&gt; &lt;div id="attachment_750777" style="width: 604px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081f5c298eb.png"&gt;&lt;img aria-describedby="caption-attachment-750777" class="wp-image-750777 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081f5c298eb.png" alt="A screenshot of the option to change the default severity level to 'Warning.'" width="594" height="265" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081f5c298eb.png 594w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081f5c298eb-300x134.png 300w" sizes="(max-width: 594px) 100vw, 594px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750777" class="wp-caption-text"&gt;Figure 21: Change the default severity level to &amp;#8216;Warning&amp;#8217; for potential compilation issues.&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;Updates to the Java editor&lt;/h3&gt; &lt;p&gt;We&amp;#8217;ve made a handful of updates to the Java editor, some of them to accommodate the new preview features.&lt;/p&gt; &lt;h4&gt;Nonblocking Java code completion&lt;/h4&gt; &lt;p&gt;By default, code completions in the Java editor are now configured to be computed (when possible) in a separate non-UI thread. This configuration prevents UI freezes in case of long computations.&lt;/p&gt; &lt;p&gt;If you want to restore the legacy behavior, the path is &lt;strong&gt;Preferences &amp;#62; Java &amp;#62; Editor &amp;#62; Content Assist &amp;#62; Advanced&lt;/strong&gt;, where you would uncheck the &lt;b&gt;Enable nonblocking completion&lt;/b&gt; checkbox. Integrators can change the value of the &lt;code&gt;org.eclipse.jdt.ui.content_assist_noUIThread_computation&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;. Figure 22 shows the option to enable (or disable) nonblocking completion:&lt;/p&gt; &lt;div id="attachment_750787" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081f7eea4b7.png"&gt;&lt;img aria-describedby="caption-attachment-750787" class="wp-image-750787" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081f7eea4b7.png" alt="A screenshot of the option to enable or disable nonblocking completion." width="640" height="804" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081f7eea4b7.png 800w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081f7eea4b7-239x300.png 239w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081f7eea4b7-768x965.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750787" class="wp-caption-text"&gt;Figure 22: Enable (or disable) nonblocking completion.&lt;/p&gt;&lt;/div&gt; &lt;h4&gt;Merge control workflows&lt;/h4&gt; &lt;p&gt;When it&amp;#8217;s possible, a new cleanup merges conditions of &lt;code&gt;if/else if/else&lt;/code&gt; that have the same blocks. An &lt;code&gt;else&lt;/code&gt; block could be different and therefore, won&amp;#8217;t be merged. One condition might be made opposite to allow the merge. The conditions are merged with &lt;code&gt;||&lt;/code&gt; to keep the control workflow the same. Adding a parenthesis avoids the priority issue. We&amp;#8217;ve kept most of the brackets, formatting, and comments.&lt;/p&gt; &lt;p&gt;To select the cleanup, invoke &lt;strong&gt;Source &amp;#62; Clean Up &lt;/strong&gt;and use a custom profile. Select the &lt;strong&gt;Unnecessary Code&lt;/strong&gt; tab on the &lt;strong&gt;Configure&lt;/strong&gt; dialog. Select &lt;strong&gt;Merge conditions of if/else if/else that have the same blocks&lt;/strong&gt;. Figure 23 shows the merge option for unnecessary code:&lt;/p&gt; &lt;div id="attachment_750797" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081fa1cfe5e.png"&gt;&lt;img aria-describedby="caption-attachment-750797" class="wp-image-750797" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081fa1cfe5e.png" alt="A screenshot of the merge option for unnecessary code." width="640" height="453" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081fa1cfe5e.png 800w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081fa1cfe5e-300x212.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081fa1cfe5e-768x543.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750797" class="wp-caption-text"&gt;Figure 23: The merge option for unnecessary code.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;As an example, for the code shown in Figure 24:&lt;/p&gt; &lt;div id="attachment_750807" style="width: 456px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081fb8b6841.png"&gt;&lt;img aria-describedby="caption-attachment-750807" class="wp-image-750807 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081fb8b6841.png" alt="A screenshot of the The MyClass.java class." width="446" height="311" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081fb8b6841.png 446w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081fb8b6841-300x209.png 300w" sizes="(max-width: 446px) 100vw, 446px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750807" class="wp-caption-text"&gt;Figure 24: The MyClass.java class before cleanup.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;you would get the result shown in Figure 25, following the cleanup:&lt;/p&gt; &lt;div id="attachment_750817" style="width: 455px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081fd1abb74.png"&gt;&lt;img aria-describedby="caption-attachment-750817" class="wp-image-750817 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081fd1abb74.png" alt="A screenshot of the MyClass.java class after cleanup." width="445" height="310" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081fd1abb74.png 445w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081fd1abb74-300x209.png 300w" sizes="(max-width: 445px) 100vw, 445px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750817" class="wp-caption-text"&gt;Figure 25: The MyClass.java class after cleanup.&lt;/p&gt;&lt;/div&gt; &lt;h4&gt;Local variable type inference&lt;/h4&gt; &lt;p&gt;Another new cleanup uses the &lt;code&gt;var&lt;/code&gt; keyword for the local variable whenever possible. Note that this cleanup is enabled only for Java 10 and higher.&lt;/p&gt; &lt;p&gt;The cleanup replaces the explicit variable type with &lt;code&gt;var&lt;/code&gt; when this type can be known by the variable initialization. It also replaces the diamond operator in instance creation with a parameterized type. Eventually, the cleanup adds a suffix to the initialization number literal to match the variable type. In any case, the variable type remains exactly the same.&lt;/p&gt; &lt;p&gt;To select the cleanup, invoke &lt;strong&gt;Source &amp;#62; Clean Up&lt;/strong&gt; and use a custom profile. On the &lt;strong&gt;Configure&lt;/strong&gt; dialog, open the &lt;strong&gt;Code Style&lt;/strong&gt; tab, then select &lt;strong&gt;Use the local variable type inference&lt;/strong&gt;, as shown in Figure 26:&lt;/p&gt; &lt;div id="attachment_750827" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081ff080a0f.png"&gt;&lt;img aria-describedby="caption-attachment-750827" class="wp-image-750827" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081ff080a0f.png" alt="A screenshot of the option to use local variable type inference in Java 10 or higher" width="640" height="585" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081ff080a0f.png 800w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081ff080a0f-300x274.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f081ff080a0f-768x702.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750827" class="wp-caption-text"&gt;Figure 26: Use local variable type inference in Java 10 or higher.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;As an example, for the code in Figure 27:&lt;/p&gt; &lt;div id="attachment_750837" style="width: 569px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f08200c68ec2.png"&gt;&lt;img aria-describedby="caption-attachment-750837" class="wp-image-750837 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f08200c68ec2.png" alt="A screenshot of the MyClass.java class before cleanup." width="559" height="266" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f08200c68ec2.png 559w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f08200c68ec2-300x143.png 300w" sizes="(max-width: 559px) 100vw, 559px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750837" class="wp-caption-text"&gt;Figure 27: MyClass.java before cleanup.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;you would get the result shown in Figure 28, following the cleanup:&lt;/p&gt; &lt;div id="attachment_750847" style="width: 569px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f082032341e2.png"&gt;&lt;img aria-describedby="caption-attachment-750847" class="wp-image-750847 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f082032341e2.png" alt="A screenshot of MyClass.java after cleanup." width="559" height="266" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f082032341e2.png 559w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f082032341e2-300x143.png 300w" sizes="(max-width: 559px) 100vw, 559px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750847" class="wp-caption-text"&gt;Figure 28: MyClass.java after cleanup.&lt;/p&gt;&lt;/div&gt; &lt;h4&gt;Prefer lazy logical operators&lt;/h4&gt; &lt;p&gt;Another new cleanup replaces eager logical operators with lazy operators whenever possible. The cleanup replaces &lt;code&gt;|&lt;/code&gt; and &lt;code&gt;&amp;#38;&lt;/code&gt; with &lt;code&gt;||&lt;/code&gt; and &lt;code&gt;&amp;#38;&amp;#38;&lt;/code&gt;, respectively. It only does so when operands such as assignments, increments, decrements, object creations, or method calls won&amp;#8217;t cause a side-effect. If an operand could cause a side-effect, the cleanup will keep the eager operator. It also leaves binary operations unchanged.&lt;/p&gt; &lt;p&gt;To select the cleanup, invoke &lt;strong&gt;Source &amp;#62; Clean Up&lt;/strong&gt; and use a custom profile. In the &lt;strong&gt;Configure&lt;/strong&gt; dialog, open the &lt;strong&gt;Code Style&lt;/strong&gt; tab, then select &lt;strong&gt;Use lazy logical operator&lt;/strong&gt;, as shown in Figure 29:&lt;/p&gt; &lt;div id="attachment_750857" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f083d49eb262.png"&gt;&lt;img aria-describedby="caption-attachment-750857" class="wp-image-750857" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f083d49eb262.png" alt="A screenshot of the option to use the lazy logical operator." width="640" height="601" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f083d49eb262.png 800w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f083d49eb262-300x282.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f083d49eb262-768x721.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750857" class="wp-caption-text"&gt;Figure 29: Open the Code Style tab and select &amp;#8216;Use lazy logical operator.&amp;#8221;&lt;/p&gt;&lt;/div&gt; &lt;p&gt;For the code in Figure 30:&lt;/p&gt; &lt;div id="attachment_750867" style="width: 583px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f083d600584e.png"&gt;&lt;img aria-describedby="caption-attachment-750867" class="wp-image-750867 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f083d600584e.png" alt="A screenshot of MyClass.java before cleanup." width="573" height="183" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f083d600584e.png 573w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f083d600584e-300x96.png 300w" sizes="(max-width: 573px) 100vw, 573px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750867" class="wp-caption-text"&gt;Figure 30: MyClass.java before cleanup.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;you would get the results shown in Figure 31, after the cleanup:&lt;/p&gt; &lt;div id="attachment_750877" style="width: 581px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f083d768fd4d.png"&gt;&lt;img aria-describedby="caption-attachment-750877" class="wp-image-750877 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f083d768fd4d.png" alt="A screenshot of MyClass.java after cleanup." width="571" height="183" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f083d768fd4d.png 571w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f083d768fd4d-300x96.png 300w" sizes="(max-width: 571px) 100vw, 571px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750877" class="wp-caption-text"&gt;Figure 31: MyClass.java after cleanup.&lt;/p&gt;&lt;/div&gt; &lt;h4&gt;A quick fix to switch expression&lt;/h4&gt; &lt;p&gt;We added a quick fix to convert a&lt;code&gt;switch&lt;/code&gt; expression&amp;#8217;s &lt;code&gt;return&lt;/code&gt; statement to a &lt;code&gt;yield&lt;/code&gt; statement, as shown in Figure 32:&lt;/p&gt; &lt;div id="attachment_750887" style="width: 424px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f083d949426d.png"&gt;&lt;img aria-describedby="caption-attachment-750887" class="wp-image-750887 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f083d949426d.png" alt="A screenshot of the option: &amp;#34;Change to 'yield' statement&amp;#34;." width="414" height="137" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f083d949426d.png 414w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f083d949426d-300x99.png 300w" sizes="(max-width: 414px) 100vw, 414px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750887" class="wp-caption-text"&gt;Figure 32: Convert a switch expression&amp;#8217;s &amp;#8216;return&amp;#8217; statement to a &amp;#8216;yield&amp;#8217; statement.&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;The Java formatter&lt;/h3&gt; &lt;p&gt;The Java formatter has new settings that support record declarations. These settings are similar to existing settings related to other type declarations. To see them all, use the Filter field and type in the keyword &lt;code&gt;record&lt;/code&gt;, as shown in Figure 33:&lt;/p&gt; &lt;div id="attachment_750897" style="width: 440px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f083dae5a648.png"&gt;&lt;img aria-describedby="caption-attachment-750897" class="wp-image-750897 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f083dae5a648.png" alt="A screenshot of the new settings for record declarations." width="430" height="768" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f083dae5a648.png 430w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f083dae5a648-168x300.png 168w" sizes="(max-width: 430px) 100vw, 430px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750897" class="wp-caption-text"&gt;Figure 33: How to access the Java formatter&amp;#8217;s new settings for record declarations.&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;Debugging&lt;/h3&gt; &lt;p&gt;The &lt;strong&gt;JDT debugger&lt;/strong&gt; is now capable of inspecting synthetic variables that are generated by Java compilers. As an example, let&amp;#8217;s say that we needed to debug the method &lt;code&gt;java.util.stream.ReferencePipeline.filter(Predicate&amp;#60;? super P_OUT&amp;#62;)&lt;/code&gt; and inspect the predicate variable. Figure 34 shows the method before debugging:&lt;/p&gt; &lt;div id="attachment_750907" style="width: 521px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f083dca71e21.png"&gt;&lt;img aria-describedby="caption-attachment-750907" class="wp-image-750907 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f083dca71e21.png" alt="A screenshot of the debugger inspecting synthetic variables." width="511" height="335" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f083dca71e21.png 511w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f083dca71e21-300x197.png 300w" sizes="(max-width: 511px) 100vw, 511px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750907" class="wp-caption-text"&gt;Figure 34: The JDT debugger flags a synthetic variable.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Figure 35 shows the method after debugging:&lt;/p&gt; &lt;div id="attachment_750917" style="width: 514px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f083de132228.png"&gt;&lt;img aria-describedby="caption-attachment-750917" class="wp-image-750917 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f083de132228.png" alt="A screenshot of the corrected variable." width="504" height="302" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f083de132228.png 504w, https://developers.redhat.com/blog/wp-content/uploads/2020/07/img_5f083de132228-300x180.png 300w" sizes="(max-width: 504px) 100vw, 504px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-750917" class="wp-caption-text"&gt;Figure 35: The corrected variable.&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;Preferences&lt;/h3&gt; &lt;p&gt;We&amp;#8217;ve removed the &lt;strong&gt;Show Substring Matches&lt;/strong&gt; option from the JDT&amp;#8217;s content assist preference option. The feature is now enabled and always on by default. Use the VM property to disable it:&lt;/p&gt; &lt;pre&gt;-Djdt.codeCompleteSubstringMatch=false &lt;/pre&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;As you can see, we made a wide range of additions and improvements in JBoss Tools 4.16.0 and Red Hat CodeReady Studio 12.16 for Eclipse 4.16 (2020-06). This update includes a bit of something for everyone. You can find more noteworthy updates on &lt;a target="_blank" rel="nofollow" href="https://tools.jboss.org/documentation/whatsnew/jbosstools/4.16.0.Final.html"&gt;this page&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F21%2Fnew-features-in-red-hat-codeready-studio-12-16-0-ga-and-jboss-tools-4-16-0-final-for-eclipse-2020-06%2F&amp;#38;linkname=New%20features%20in%20Red%20Hat%20CodeReady%20Studio%2012.16.0.GA%20and%20JBoss%20Tools%204.16.0.Final%20for%20Eclipse%202020-06" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F21%2Fnew-features-in-red-hat-codeready-studio-12-16-0-ga-and-jboss-tools-4-16-0-final-for-eclipse-2020-06%2F&amp;#38;linkname=New%20features%20in%20Red%20Hat%20CodeReady%20Studio%2012.16.0.GA%20and%20JBoss%20Tools%204.16.0.Final%20for%20Eclipse%202020-06" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F21%2Fnew-features-in-red-hat-codeready-studio-12-16-0-ga-and-jboss-tools-4-16-0-final-for-eclipse-2020-06%2F&amp;#38;linkname=New%20features%20in%20Red%20Hat%20CodeReady%20Studio%2012.16.0.GA%20and%20JBoss%20Tools%204.16.0.Final%20for%20Eclipse%202020-06" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F21%2Fnew-features-in-red-hat-codeready-studio-12-16-0-ga-and-jboss-tools-4-16-0-final-for-eclipse-2020-06%2F&amp;#38;linkname=New%20features%20in%20Red%20Hat%20CodeReady%20Studio%2012.16.0.GA%20and%20JBoss%20Tools%204.16.0.Final%20for%20Eclipse%202020-06" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F21%2Fnew-features-in-red-hat-codeready-studio-12-16-0-ga-and-jboss-tools-4-16-0-final-for-eclipse-2020-06%2F&amp;#38;linkname=New%20features%20in%20Red%20Hat%20CodeReady%20Studio%2012.16.0.GA%20and%20JBoss%20Tools%204.16.0.Final%20for%20Eclipse%202020-06" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F21%2Fnew-features-in-red-hat-codeready-studio-12-16-0-ga-and-jboss-tools-4-16-0-final-for-eclipse-2020-06%2F&amp;#38;linkname=New%20features%20in%20Red%20Hat%20CodeReady%20Studio%2012.16.0.GA%20and%20JBoss%20Tools%204.16.0.Final%20for%20Eclipse%202020-06" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F21%2Fnew-features-in-red-hat-codeready-studio-12-16-0-ga-and-jboss-tools-4-16-0-final-for-eclipse-2020-06%2F&amp;#38;linkname=New%20features%20in%20Red%20Hat%20CodeReady%20Studio%2012.16.0.GA%20and%20JBoss%20Tools%204.16.0.Final%20for%20Eclipse%202020-06" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F07%2F21%2Fnew-features-in-red-hat-codeready-studio-12-16-0-ga-and-jboss-tools-4-16-0-final-for-eclipse-2020-06%2F&amp;#038;title=New%20features%20in%20Red%20Hat%20CodeReady%20Studio%2012.16.0.GA%20and%20JBoss%20Tools%204.16.0.Final%20for%20Eclipse%202020-06" data-a2a-url="https://developers.redhat.com/blog/2020/07/21/new-features-in-red-hat-codeready-studio-12-16-0-ga-and-jboss-tools-4-16-0-final-for-eclipse-2020-06/" data-a2a-title="New features in Red Hat CodeReady Studio 12.16.0.GA and JBoss Tools 4.16.0.Final for Eclipse 2020-06"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/07/21/new-features-in-red-hat-codeready-studio-12-16-0-ga-and-jboss-tools-4-16-0-final-for-eclipse-2020-06/"&gt;New features in Red Hat CodeReady Studio 12.16.0.GA and JBoss Tools 4.16.0.Final for Eclipse 2020-06&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/KDIbwUVsn-g" height="1" width="1" alt=""/&gt;</content><summary>JBoss Tools 4.16.0 and Red Hat CodeReady Studio 12.16 for Eclipse 4.16 (2020-06) are now available. For this release, we focused on improving Quarkus– and container-based development and fixing bugs. We also updated the Hibernate Tools runtime provider and Java Developer Tools (JDT) extensions, which are now compatible with Java 14. Additionally, we made many changes to platform views, dialogs, an...</summary><dc:creator>Jeff Maury</dc:creator><dc:date>2020-07-21T13:57:00Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/07/21/new-features-in-red-hat-codeready-studio-12-16-0-ga-and-jboss-tools-4-16-0-final-for-eclipse-2020-06/</feedburner:origLink></entry><entry><title>Beginners guide - Building a retail web shop workshop update</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/s7UpseHwLmA/beginners-guide-building-a-retail-web-shop-workshop-update.html" /><category term="AppDev" scheme="searchisko:content:tags" /><category term="Decision Manager" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><category term="workshops" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-beginners_guide_building_a_retail_web_shop_workshop_update</id><updated>2020-07-23T08:14:11Z</updated><published>2020-07-21T05:00:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-_zODEskLabg/Xxk9k61btqI/AAAAAAAAxTg/76aQOdd0q2ooXqt6Z-CBw2DKUIVYHPOCQCNcBGAsYHQ/s2048/beginners-guide.jpg" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="1366" data-original-width="2048" height="213" src="https://1.bp.blogspot.com/-_zODEskLabg/Xxk9k61btqI/AAAAAAAAxTg/76aQOdd0q2ooXqt6Z-CBw2DKUIVYHPOCQCNcBGAsYHQ/w320-h213/beginners-guide.jpg" title="beginners guide" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;For some years now I've maintained s free online hands-on beginners workshop for getting started with business logic tooling. Recently I've updated the entire workshop to the latest versions of the components and updated the front end.&lt;br /&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;The basics of this workshop is developing an understanding of how to use an external rules engine in your development project. It's about providing decision management capabilities so that you can dynamically change your business logic without having to change your application code. No code changes means you don't have to redeploy the application to change the behavior application.&lt;br /&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;The power of externalizing business logic can't be underestimated in these times of fast moving development and application life cycles where we want to be agile and release often. While this online workshop showcases a simple local installation and deployment for teaching purposes, one can easily see the implications for developers working on modern cloud-native container-based deployment models.&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;This workshop has been split out into ten separate labs, each one focusing on a single aspect of the project as you build your business logic out using almost every type of rule offered by the engine. You'll explore the tooling, editors, and more, each a single step at a time.&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;It's &lt;a href="https://bpmworkshop.gitlab.io/rhdm/index.html#/" target="_blank"&gt;set up to be self-paced&lt;/a&gt; and you can stop anywhere along the way, spin down the application server, and return at a later time to continue down your learning path. The workshop is also &lt;a href="https://gitlab.com/bpmworkshop/bpmworkshop.gitlab.io" target="_blank"&gt;hosted as a Git project&lt;/a&gt; that you can download and take with you for learning on the road.&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Let's &lt;a href="https://bpmworkshop.gitlab.io/rhdm/index.html#/" target="_blank"&gt;explore the workshop&lt;/a&gt; and get you started on your first retail web shop.&lt;/div&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;br /&gt;&lt;div&gt;&lt;div class="separator" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em; text-align: center;"&gt;&lt;/div&gt;The &lt;a href="https://bpmworkshop.gitlab.io/rhdm/index.html#/1" target="_blank"&gt;first half of the workshop&lt;/a&gt; contains five labs.&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-dT_9F5lTGhk/XxlGnOD7AHI/AAAAAAAAxUE/x0-QwGQAr-8C71Sw9qQnrYAGoKwLCEgZgCNcBGAsYHQ/s1600/Screenshot%2B2020-07-23%2Bat%2B10.10.22.png" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt;&lt;img alt="retail web shop workshop" border="0" data-original-height="832" data-original-width="1600" height="166" src="https://1.bp.blogspot.com/-dT_9F5lTGhk/XxlGnOD7AHI/AAAAAAAAxUE/x0-QwGQAr-8C71Sw9qQnrYAGoKwLCEgZgCNcBGAsYHQ/s320/Screenshot%2B2020-07-23%2Bat%2B10.10.22.png" title="" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;These first five labs are as follows:&lt;/div&gt;&lt;div&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;&lt;a href="https://bpmworkshop.gitlab.io/rhdm/lab01.html" target="_blank"&gt;Lab 1&lt;/a&gt; - Install Red Hat Decision Manager&lt;/li&gt;&lt;li&gt;&lt;a href="https://bpmworkshop.gitlab.io/rhdm/lab02.html" target="_blank"&gt;Lab 2 &lt;/a&gt;- Create a new project&lt;/li&gt;&lt;li&gt;&lt;a href="https://bpmworkshop.gitlab.io/rhdm/lab03.html" target="_blank"&gt;Lab 3&lt;/a&gt; - Create a domain model&lt;/li&gt;&lt;li&gt;&lt;a href="https://bpmworkshop.gitlab.io/rhdm/lab04.html" target="_blank"&gt;Lab 4&lt;/a&gt; - Create a domain specific language (DSL)&lt;/li&gt;&lt;li&gt;&lt;a href="https://bpmworkshop.gitlab.io/rhdm/lab05.html" target="_blank"&gt;Lab 5&lt;/a&gt; - Create guided rules&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Everything you need to run the entire workshop is available through downloads on &lt;a href="https://developers.redhat.com/" target="_blank"&gt;Red Hat Developers &lt;/a&gt;website. Furthermore, installation and requirements checking has been automated in the first lab to guide you to a successful experience for most Unix operating systems and Windows operating systems.&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-oFA_NwICpv4/Xxk7_7g4vGI/AAAAAAAAxTQ/s9MrtyOoxwYmQ09SKs4GutVGWfJ2qjHRQCNcBGAsYHQ/s936/rhdm-arch.png" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt;&lt;img border="0" data-original-height="547" data-original-width="936" src="https://1.bp.blogspot.com/-oFA_NwICpv4/Xxk7_7g4vGI/AAAAAAAAxTQ/s9MrtyOoxwYmQ09SKs4GutVGWfJ2qjHRQCNcBGAsYHQ/s320/rhdm-arch.png" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Each lab starts with an overview image of the Red Hat Decision Manager architecture, with a highlighted component or tool shown to indicate that's what you are focusing on in that particular lab.&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;The intention is guiding you on your journey and allowing you to understand your focus for each lab as you work through the tooling and components offered.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Each lab also ends in the same fashion, with a final view of what your environment should look like (screenshot), my contact details should you have any questions you can then reach out to me, and a list of references for you to pursue at your leisure. Finally, a link to the next lab is provided to take you on the way down the road to your next lab challenge.&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;The &lt;a href="https://bpmworkshop.gitlab.io/rhdm/index.html#/2" target="_blank"&gt;second half of the workshop&lt;/a&gt; contains the remaining five labs.&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;a href="https://1.bp.blogspot.com/-5tdvH4MwfBA/XxlGsxegFfI/AAAAAAAAxUI/nEq1aGKZiboZ0wt4AJtA9u_xqc0TAX66wCNcBGAsYHQ/s1600/Screenshot%2B2020-07-23%2Bat%2B10.10.10.png" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt;&lt;img alt="retail web shop workshop" border="0" data-original-height="833" data-original-width="1600" height="166" src="https://1.bp.blogspot.com/-5tdvH4MwfBA/XxlGsxegFfI/AAAAAAAAxUI/nEq1aGKZiboZ0wt4AJtA9u_xqc0TAX66wCNcBGAsYHQ/s320/Screenshot%2B2020-07-23%2Bat%2B10.10.10.png" title="" width="320" /&gt;&lt;/a&gt;These last five labs are as follows:&lt;/div&gt;&lt;div&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;&lt;a href="https://bpmworkshop.gitlab.io/rhdm/lab06.html" target="_blank"&gt;Lab 6&lt;/a&gt; - Create technical rules (DRL)&lt;/li&gt;&lt;li&gt;&lt;a href="https://bpmworkshop.gitlab.io/rhdm/lab07.html" target="_blank"&gt;Lab 7&lt;/a&gt; - Create guided decision table&lt;/li&gt;&lt;li&gt;&lt;a href="https://bpmworkshop.gitlab.io/rhdm/lab08.html" target="_blank"&gt;Lab 8&lt;/a&gt; - Create rule flow&lt;/li&gt;&lt;li&gt;&lt;a href="https://bpmworkshop.gitlab.io/rhdm/lab09.html" target="_blank"&gt;Lab 9&lt;/a&gt; - Create test scenarios&lt;/li&gt;&lt;li&gt;&lt;a href="https://bpmworkshop.gitlab.io/rhdm/lab10.html" target="_blank"&gt;Lab 10&lt;/a&gt; - Deploying your retail web shop&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;The last lab is worth mentioning as it's providing you with a prefabricated java project you can download, build, and deploy as your web shop front end application. It's a shopping cart for your customers to use in your web shop and based on the latest Vaadin framework (an open collaboration project with a PM contact at Vaadin).&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;After deploying the front end, you'll be guided through a shopping experience with automated pricing for shipping of the goods selected. The shipping prices are from a decision table you created in the workshop.&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;a href="https://1.bp.blogspot.com/-sihZt_dS0v8/XxlA9L1Gc9I/AAAAAAAAxT4/IPWS0uqWopkhphwx8SOSq9N2Zi_eiPztACNcBGAsYHQ/s1375/rhdm-component-frontend-use.png" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt;&lt;img border="2" data-original-height="589" data-original-width="1375" src="https://1.bp.blogspot.com/-sihZt_dS0v8/XxlA9L1Gc9I/AAAAAAAAxT4/IPWS0uqWopkhphwx8SOSq9N2Zi_eiPztACNcBGAsYHQ/s320/rhdm-component-frontend-use.png" width="320" /&gt;&lt;/a&gt;To demonstrate the flexibility of externalizing your business logic in the form of shipping pricing rules, you'll revisit your decision table and change one of the pricing tiers. These changes are automatically picked up by the front end shopping cart application by the next customer to shop. You'll see the shipping prices for the same shopping experience has been changed.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;I hope you enjoy this workshop and feel free to reach out on my contact form if you have any feedback or leave a comment.&lt;/div&gt;&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=_r8Guz3KNNA:x9mrH-VnMbY:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=_r8Guz3KNNA:x9mrH-VnMbY:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=_r8Guz3KNNA:x9mrH-VnMbY:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=_r8Guz3KNNA:x9mrH-VnMbY:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=_r8Guz3KNNA:x9mrH-VnMbY:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=_r8Guz3KNNA:x9mrH-VnMbY:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=_r8Guz3KNNA:x9mrH-VnMbY:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=_r8Guz3KNNA:x9mrH-VnMbY:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=_r8Guz3KNNA:x9mrH-VnMbY:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=_r8Guz3KNNA:x9mrH-VnMbY:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=_r8Guz3KNNA:x9mrH-VnMbY:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/_r8Guz3KNNA" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/s7UpseHwLmA" height="1" width="1" alt=""/&gt;</content><summary>For some years now I've maintained s free online hands-on beginners workshop for getting started with business logic tooling. Recently I've updated the entire workshop to the latest versions of the components and updated the front end. The basics of this workshop is developing an understanding of how to use an external rules engine in your development project. It's about providing decision managem...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2020-07-21T05:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/_r8Guz3KNNA/beginners-guide-building-a-retail-web-shop-workshop-update.html</feedburner:origLink></entry><entry><title>JBoss Tools and Red Hat CodeReady Studio for Eclipse 2020-06</title><link rel="alternate" type="text/html" href="http://feedproxy.google.com/~r/jbossbuzz/~3/ufT4g1fric0/12.16.0.ga.html" /><category term="release" /><category term="jbosstools" /><category term="devstudio" /><category term="jbosscentral" /><category term="codereadystudio" /><author><name>jeffmaury</name></author><id>https://tools.jboss.org/blog/12.16.0.ga.html</id><updated>2020-07-21T07:00:37Z</updated><published>2020-07-21T00:00:00Z</published><content type="html">&lt;div&gt;&lt;div id="preamble"&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;a href="https://tools.jboss.org/downloads/jbosstools/2020-06/4.16.0.Final.html"&gt;JBoss Tools 4.16.0&lt;/a&gt; and &lt;a href="https://tools.jboss.org/downloads/devstudio/2020-06/12.16.0.GA.html"&gt;Red Hat CodeReady Studio 12.16&lt;/a&gt; for Eclipse 2020-06 are here waiting for you. Check it out!&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/blog/images/crstudio12.png" alt="crstudio12" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="installation"&gt;&lt;a class="anchor" href="#installation"&gt;&lt;/a&gt;Installation&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Red Hat CodeReady Studio comes with everything pre-bundled in its installer. Simply download it from our &lt;a href="https://developers.redhat.com/products/codeready-studio/overview/"&gt;Red Hat CodeReady product page&lt;/a&gt; and run it like this:&lt;/p&gt; &lt;/div&gt; &lt;div class="literalblock"&gt; &lt;div class="content"&gt; &lt;pre&gt;java -jar codereadystudio-&amp;lt;installername&amp;gt;.jar&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;JBoss Tools or Bring-Your-Own-Eclipse (BYOE) CodeReady Studio require a bit more:&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;This release requires at least Eclipse 4.16 (2020-06) but we recommend using the latest &lt;a href="https://www.eclipse.org/downloads/packages/release/2020-06/r/eclipse-ide-enterprise-java-developers"&gt;Eclipse 4.16 2020-06 JEE Bundle&lt;/a&gt; since then you get most of the dependencies preinstalled.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Once you have installed Eclipse, you can either find us on the Eclipse Marketplace under &amp;quot;JBoss Tools&amp;quot; or &amp;quot;Red Hat CodeReady Studio&amp;quot;.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For JBoss Tools, you can also use our update site directly.&lt;/p&gt; &lt;/div&gt; &lt;div class="literalblock"&gt; &lt;div class="content"&gt; &lt;pre&gt;http://download.jboss.org/jbosstools/photon/stable/updates/&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="what-is-new"&gt;&lt;a class="anchor" href="#what-is-new"&gt;&lt;/a&gt;What is new?&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Our main focus for this release was a new tooling for the Quarkus framework, improvements for container based development and bug fixing. Eclipse 2020-06 itself has a lot of new cool stuff but let me highlight just a few updates in both Eclipse 2020-06 and JBoss Tools plugins that I think are worth mentioning.&lt;/p&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="openshift"&gt;&lt;a class="anchor" href="#openshift"&gt;&lt;/a&gt;OpenShift&lt;/h3&gt; &lt;div class="sect3"&gt; &lt;h4 id="secure-url-support"&gt;&lt;a class="anchor" href="#secure-url-support"&gt;&lt;/a&gt;Secure URL support&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;It is now possible to create secured URLs in the Application Explorer View. If you select this option, the created URL will be accessible through &lt;code&gt;https&lt;/code&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/secure-url.png" alt="secure url" width="600" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;When such an URL is displayed in the tree, the icon now has a secure lock indicator.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://tools.jboss.org/documentation/whatsnew/openshift/images/secure-url1.png" alt="secure url1" width="600" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="openshift-container-platform-4-5-support"&gt;&lt;a class="anchor" href="#openshift-container-platform-4-5-support"&gt;&lt;/a&gt;OpenShift Container Platform 4.5 support&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;With the new OpenShift Container Platform (OCP) 4.5 now available, JBoss Tools is compatible with this major release in a transparent way. Just define your connection to your OCP 4.4 based cluster as you did before for an OCP 3 cluster, and use the tooling !&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="quarkus"&gt;&lt;a class="anchor" href="#quarkus"&gt;&lt;/a&gt;Quarkus&lt;/h3&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="server-tools"&gt;&lt;a class="anchor" href="#server-tools"&gt;&lt;/a&gt;Server Tools&lt;/h3&gt; &lt;div class="sect3"&gt; &lt;h4 id="wildfly-20-server-adapter"&gt;&lt;a class="anchor" href="#wildfly-20-server-adapter"&gt;&lt;/a&gt;Wildfly 20 Server Adapter&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A server adapter has been added to work with Wildfly 20. It adds support for Java EE 8, Jakarta EE 8 and Microprofile 3.3.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="hibernate-tools"&gt;&lt;a class="anchor" href="#hibernate-tools"&gt;&lt;/a&gt;Hibernate Tools&lt;/h3&gt; &lt;div class="sect3"&gt; &lt;h4 id="hibernate-runtime-provider-updates"&gt;&lt;a class="anchor" href="#hibernate-runtime-provider-updates"&gt;&lt;/a&gt;Hibernate Runtime Provider Updates&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A number of additions and updates have been performed on the available Hibernate runtime providers.&lt;/p&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="runtime-provider-updates"&gt;&lt;a class="anchor" href="#runtime-provider-updates"&gt;&lt;/a&gt;Runtime Provider Updates&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The Hibernate 5.4 runtime provider now incorporates Hibernate Core version 5.4.17.Final and Hibernate Tools version 5.4.17.Final.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The Hibernate 5.3 runtime provider now incorporates Hibernate Core version 5.3.17.Final and Hibernate Tools version 5.3.17.Final.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="platform"&gt;&lt;a class="anchor" href="#platform"&gt;&lt;/a&gt;Platform&lt;/h3&gt; &lt;div class="sect3"&gt; &lt;h4 id="views-dialogs-and-toolbar"&gt;&lt;a class="anchor" href="#views-dialogs-and-toolbar"&gt;&lt;/a&gt;Views, Dialogs and Toolbar&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="create-missing-folders-from-the-new-file-wizard"&gt;&lt;a class="anchor" href="#create-missing-folders-from-the-new-file-wizard"&gt;&lt;/a&gt;Create missing folders from the New File wizard&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You can now create missing folders directly via the New File wizard, without explicitly creating folders beforehand.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/file-and-folder.png" alt="file and folder" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="text-editors"&gt;&lt;a class="anchor" href="#text-editors"&gt;&lt;/a&gt;Text Editors&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="support-for-ligatures-on-windows"&gt;&lt;a class="anchor" href="#support-for-ligatures-on-windows"&gt;&lt;/a&gt;Support for ligatures on Windows&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Eclipse now supports font ligatures on Windows. It was already supported on Linux and macOS. You can specify the font with ligatures to be used by the &lt;strong&gt;Text editors&lt;/strong&gt; using the preference:&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;strong&gt;General &amp;gt; Appearance &amp;gt; Colors and Font &amp;gt; Basic &amp;gt; Text Font&lt;/strong&gt;&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Screenshot of ligatures rendered in the Java Editor on Windows 10:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/eclipse_ligatures_support_win.png" alt="eclipse ligatures support win" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="themes-and-styling"&gt;&lt;a class="anchor" href="#themes-and-styling"&gt;&lt;/a&gt;Themes and Styling&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="native-dark-scrollbars-in-windows-dark-theme"&gt;&lt;a class="anchor" href="#native-dark-scrollbars-in-windows-dark-theme"&gt;&lt;/a&gt;Native dark scrollbars in Windows dark theme&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The Eclipse dark theme now uses the native dark scrollbars and retired the software solution for the editor area.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/dark-theme-scrollbars.png" alt="dark theme scrollbars" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="eclipse-toolbar-s-styling-on-windows-aligned-with-win-10"&gt;&lt;a class="anchor" href="#eclipse-toolbar-s-styling-on-windows-aligned-with-win-10"&gt;&lt;/a&gt;Eclipse toolbar’s styling on Windows aligned with Win 10&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The default Eclipse light theme has been updated to align better with the Windows 10 default theme.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Old:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/old-light-theme.png" alt="old light theme" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;New:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/new-light-theme.png" alt="new light theme" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="square-tabs-for-views"&gt;&lt;a class="anchor" href="#square-tabs-for-views"&gt;&lt;/a&gt;Square tabs for views&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Square tabs are now used by default for the views in the Eclipse IDE.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/dark_theme_square_tabs.png" alt="dark theme square tabs" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;In order to switch back to using round tabs, a preference has been added.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/round_tabs_preference_option.png" alt="round tabs preference option" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="consistent-toolbar-colors-in-dark-theme"&gt;&lt;a class="anchor" href="#consistent-toolbar-colors-in-dark-theme"&gt;&lt;/a&gt;Consistent toolbar colors in dark theme&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The toolbar styling in the dark theme is now consistent.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/dark-theme-toolbar.png" alt="dark theme toolbar" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="preferences"&gt;&lt;a class="anchor" href="#preferences"&gt;&lt;/a&gt;Preferences&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="verify-installation-operations-against-current-jre"&gt;&lt;a class="anchor" href="#verify-installation-operations-against-current-jre"&gt;&lt;/a&gt;Verify installation operations against current JRE&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A new option (on by default) is available in the &lt;strong&gt;Install/Update&lt;/strong&gt; preference page: &lt;em&gt;Verify provisioning operation is compatible with current running JRE&lt;/em&gt;. This enables some extra check when installing, updating or uninstalling content using the standard dialogs so the operation will fail with a useful message if the units you’re installing require a newer or incompatible Java runtime than the one that’s currently in use to run the IDE.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/incompatibleJREPref.png" alt="incompatibleJREPref" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Here is how the error message looks like, for example when you’re trying to install a unit that requires Java 14 and you’re running the Eclipse IDE with an older Java version:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/incompatibleJREMessage.png" alt="incompatibleJREMessage" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="preference-to-inline-rename-resource"&gt;&lt;a class="anchor" href="#preference-to-inline-rename-resource"&gt;&lt;/a&gt;Preference to inline rename resource&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The preference to rename resource inline or using dialog was added in 4.15 as a radio button and has now been changed to a check box.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/inlineRenameResource.png" alt="inlineRenameResource" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="debug"&gt;&lt;a class="anchor" href="#debug"&gt;&lt;/a&gt;Debug&lt;/h4&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="select-all-and-deselect-all-for-import-breakpoints-wizard"&gt;&lt;a class="anchor" href="#select-all-and-deselect-all-for-import-breakpoints-wizard"&gt;&lt;/a&gt;&amp;apos;Select All&amp;apos; and &amp;apos;Deselect All&amp;apos; for Import breakpoints wizard&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You can now use &lt;strong&gt;Select All&lt;/strong&gt; or &lt;strong&gt;Deselect All&lt;/strong&gt; buttons to select or deselect all the breakpoint markers during import of breakpoints.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/import-selectall.png" alt="import selectall" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="general-updates"&gt;&lt;a class="anchor" href="#general-updates"&gt;&lt;/a&gt;General Updates&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="show-key-bindings-when-command-is-invoked"&gt;&lt;a class="anchor" href="#show-key-bindings-when-command-is-invoked"&gt;&lt;/a&gt;Show key bindings when command is invoked&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For presentations, screen casts and learning purposes, it is very helpful to show the corresponding key binding when a command is invoked. This was added some releases ago.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/show_keybindings.png" alt="show keybindings" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;It is now possible to enable this feature separately for keyboard interaction and mouse clicks. So you can enable it for mouse clicks only, for keyboard interaction only or for both. Enabling this only for mouse clicks is very helpful for users who want to learn existing key bindings.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You can enable this on the &lt;strong&gt;Preferences&lt;/strong&gt; dialog via the &lt;em&gt;Show key binding when command is invoked&lt;/em&gt; group on the &lt;strong&gt;General &amp;gt; Keys&lt;/strong&gt; preference page. To change this setting quickly the command &amp;apos;Toggle Show Key Bindings&amp;apos; can be used (e.g. via the find actions dialog).&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/show_keybindings_pref.png" alt="show keybindings pref" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="ant-1-10-8"&gt;&lt;a class="anchor" href="#ant-1-10-8"&gt;&lt;/a&gt;Ant 1.10.8&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Eclipse has adopted Ant version 1.10.8.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="java-developement-tools-jdt"&gt;&lt;a class="anchor" href="#java-developement-tools-jdt"&gt;&lt;/a&gt;Java Developement Tools (JDT)&lt;/h3&gt; &lt;div class="sect3"&gt; &lt;h4 id="java-14-support"&gt;&lt;a class="anchor" href="#java-14-support"&gt;&lt;/a&gt;Java 14 Support&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="java-14"&gt;&lt;a class="anchor" href="#java-14"&gt;&lt;/a&gt;Java 14&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Java™ 14 is available and Eclipse JDT supports Java 14 for the Eclipse 4.16 release.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The release notably includes the following Java 14 features:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;JEP 361: Switch Expressions (Standard).&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;JEP 359: Records (Preview).&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;JEP 368: Text Blocks (Second Preview).&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;JEP 305: Pattern Matching for Instanceof (Preview).&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Please note that preview option should be on for preview language features. For an informal introduction of the support, please refer to &lt;a href="https://wiki.eclipse.org/Java14/Examples"&gt;Java 14 Examples wiki&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="set-jdk-compliance-to-14"&gt;&lt;a class="anchor" href="#set-jdk-compliance-to-14"&gt;&lt;/a&gt;Set JDK Compliance to 14&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You can set the JDK compliance to 14 and enable the preview features in &lt;strong&gt;Preferences &amp;gt; Java &amp;gt; Compiler&lt;/strong&gt;:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/jdk-compliance-14.png" alt="jdk compliance 14" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="template-to-create-new-record"&gt;&lt;a class="anchor" href="#template-to-create-new-record"&gt;&lt;/a&gt;Template to create new record&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You can use the &lt;code&gt;new_record&lt;/code&gt; template to create a record in an empty &lt;code&gt;.java&lt;/code&gt; file:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/newrecord.png" alt="newrecord" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="record-creation-wizard"&gt;&lt;a class="anchor" href="#record-creation-wizard"&gt;&lt;/a&gt;Record Creation Wizard&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You can create a new record using the Record creation wizard that can be opened by:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Right Click on the &lt;strong&gt;Project &amp;gt; New &amp;gt; Record&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Right Click on the &lt;strong&gt;Project &amp;gt; New &amp;gt; Other and search for Record&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Right Click on the &lt;strong&gt;Project &amp;gt; New &amp;gt; Other &amp;gt; Java &amp;gt; Record&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The Record creation wizard comes up as shown below.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/fileAddJ14RecordCreation.png" alt="fileAddJ14RecordCreation" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;em&gt;Note: In older workspaces the &amp;quot;Record&amp;quot; entry may not appear directly under the &amp;quot;New&amp;quot; menu in the Java perspective. To resolve this, either use a new workspace or launch eclipse with the option &lt;code&gt;-clearPersistedState&lt;/code&gt; for your existing workspace.&lt;/em&gt;&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="enable-preview-features"&gt;&lt;a class="anchor" href="#enable-preview-features"&gt;&lt;/a&gt;Enable preview features&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You can now quickly enable the preview features on an applicable Java project by right-clicking on it and selecting &lt;strong&gt;Configure &amp;gt; Enable preview features&lt;/strong&gt;:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/enable-preview.png" alt="enable preview" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You can also change the default severity (warning) of the preview features compile problem in the opened &lt;strong&gt;Project properties&lt;/strong&gt; dialog:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/preview-severity.png" alt="preview severity" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="java-editor"&gt;&lt;a class="anchor" href="#java-editor"&gt;&lt;/a&gt;Java Editor&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="non-blocking-java-code-completion"&gt;&lt;a class="anchor" href="#non-blocking-java-code-completion"&gt;&lt;/a&gt;Non-blocking Java code completion&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;By default, code completions in the &lt;strong&gt;Java editor&lt;/strong&gt; are now configured to be computed (when possible) in a separate non-UI thread in order to prevent UI freezes in case of long computations.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Users can restore the legacy behavior in &lt;strong&gt;Preferences &amp;gt; Java &amp;gt; Editor &amp;gt; Content Assist &amp;gt; Advanced&lt;/strong&gt; by unchecking the enable non-blocking completion checkbox; integrators can change the value of the &lt;code&gt;org.eclipse.jdt.ui.content_assist_noUIThread_computation&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/jdtNonBlockingCompletionPref.png" alt="jdtNonBlockingCompletionPref" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="merge-control-workflows"&gt;&lt;a class="anchor" href="#merge-control-workflows"&gt;&lt;/a&gt;Merge control workflows&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A new clean up has been added that merges conditions of if/else if/else that have the same blocks when it is possible.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The code in the blocks should be the same. An else block may be different and won’t be merged. One condition may be made opposite to allow the merge. The conditions are merged with &lt;code&gt;||&lt;/code&gt; to keep the control workflow the same. Parenthesis is added to avoid priority issue. Most of the brackets, formatting and comments are kept.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;To select the clean up, invoke &lt;strong&gt;Source &amp;gt; Clean Up…​&lt;/strong&gt;, use a custom profile, and on the &lt;strong&gt;Configure…​&lt;/strong&gt; dialog select &lt;strong&gt;Merge conditions of if/else if/else that have the same blocks&lt;/strong&gt; on the &lt;strong&gt;Unnecessary Code&lt;/strong&gt; tab.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/merge-control-workflows-preferences.png" alt="merge control workflows preferences" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For the given code:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/merge-control-workflows-before.png" alt="merge control workflows before" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You get this after the clean up:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/merge-control-workflows-after.png" alt="merge control workflows after" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="local-variable-type-inference"&gt;&lt;a class="anchor" href="#local-variable-type-inference"&gt;&lt;/a&gt;Local variable type inference&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A new clean up has been added that makes use of the &lt;code&gt;var&lt;/code&gt; keyword for the local variable when it is possible and is enabled only for Java 10 and higher.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The clean up replaces the explicit variable type by &lt;code&gt;var&lt;/code&gt; when this type can be known by the variable initialization. It also replaces the diamond operator in instance creation by a parameterized type. Eventually, it adds a suffix to initialization number literal to match the variable type. In any case, the variable type is still exactly the same.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;To select the clean up, invoke &lt;strong&gt;Source &amp;gt; Clean Up…​&lt;/strong&gt;, use a custom profile, and on the &lt;strong&gt;Configure…​&lt;/strong&gt; dialog select &lt;strong&gt;Use the local variable type inference&lt;/strong&gt; on the &lt;strong&gt;Code Style&lt;/strong&gt; tab.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/var-preferences.png" alt="var preferences" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For the given code:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/var-before.png" alt="var before" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You get this after the clean up:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/var-after.png" alt="var after" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="prefer-lazy-logical-operators"&gt;&lt;a class="anchor" href="#prefer-lazy-logical-operators"&gt;&lt;/a&gt;Prefer lazy logical operators&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A new clean up has been added that replaces eager logical operators by lazy operators when it is possible.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The clean up respectively replaces &lt;code&gt;|&lt;/code&gt; and &amp;amp; by &lt;code&gt;||&lt;/code&gt; and &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; when the following operands can’t make side effect. Any assignments, increments, decrements, object creations or method call may cause side effect. So, in such case, it will keep the eager operator. It also leaves the binary operations as it is.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;To select the clean up, invoke &lt;strong&gt;Source &amp;gt; Clean Up…​&lt;/strong&gt;, use a custom profile, and on the &lt;strong&gt;Configure…​&lt;/strong&gt; dialog select &lt;strong&gt;Use the lazy logical operator&lt;/strong&gt; on the &lt;strong&gt;Code Style&lt;/strong&gt; tab.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/lazy-logical-preferences.png" alt="lazy logical preferences" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For the given code:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/lazy-logical-before.png" alt="lazy logical before" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You get this after the clean up:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/lazy-logical-after.png" alt="lazy logical after" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="quick-fix-to-change-return-statement-to-yield-statement-in-switch-expression"&gt;&lt;a class="anchor" href="#quick-fix-to-change-return-statement-to-yield-statement-in-switch-expression"&gt;&lt;/a&gt;Quick fix to change return statement to yield statement in Switch Expression&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A quick fix has been added to convert a &lt;code&gt;return&lt;/code&gt; statement in a &lt;code&gt;Switch Expression&lt;/code&gt; to &lt;code&gt;yield&lt;/code&gt; statement.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/quickfix-switch-expression-return-to-yield.png" alt="quickfix switch expression return to yield" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="java-formatter"&gt;&lt;a class="anchor" href="#java-formatter"&gt;&lt;/a&gt;Java Formatter&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="record-declarations-support"&gt;&lt;a class="anchor" href="#record-declarations-support"&gt;&lt;/a&gt;Record declarations support&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A lot of new settings have appeared in the formatter profile to control the formatting of &lt;strong&gt;record declarations&lt;/strong&gt;. They are very similar to existing settings related to other type declarations. To see them all, you can use the filter field and type in the keyword &lt;code&gt;record&lt;/code&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/formatter-records.png" alt="formatter records" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="debug-2"&gt;&lt;a class="anchor" href="#debug-2"&gt;&lt;/a&gt;Debug&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="synthetic-variables-inspection"&gt;&lt;a class="anchor" href="#synthetic-variables-inspection"&gt;&lt;/a&gt;Synthetic variables inspection&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The &lt;strong&gt;JDT debugger&lt;/strong&gt; is now capable of inspecting synthetic variables which are generated by the Java compilers. One such example is debugging the following method ` java.util.stream.ReferencePipeline.filter(Predicate&amp;lt;? super P_OUT&amp;gt;)` and inspecting the predicate variable.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Before:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/synthetic_var_without_fix.png" alt="synthetic var without fix" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Now:&lt;/p&gt; &lt;/div&gt; &lt;div class="imageblock"&gt; &lt;div class="content"&gt; &lt;img src="https://www.eclipse.org/eclipse/news/4.16/images/synthetic_var_with_fix.png" alt="synthetic var with fix" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="preferences-2"&gt;&lt;a class="anchor" href="#preferences-2"&gt;&lt;/a&gt;Preferences&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="substring-matching"&gt;&lt;a class="anchor" href="#substring-matching"&gt;&lt;/a&gt;Substring Matching&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The content assist preference option &lt;strong&gt;Show Substring Matches&lt;/strong&gt; has been removed and the feature is now always enabled.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Any application or user can still disable it using the VM property: &lt;strong&gt;-Djdt.codeCompleteSubstringMatch=false&lt;/strong&gt;&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="and-more"&gt;&lt;a class="anchor" href="#and-more"&gt;&lt;/a&gt;And more…​&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You can find more noteworthy updates in on &lt;a href="https://tools.jboss.org/documentation/whatsnew/jbosstools/4.16.0.Final.html"&gt;this page&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="what-is-next"&gt;&lt;a class="anchor" href="#what-is-next"&gt;&lt;/a&gt;What is next?&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Having JBoss Tools 4.16.0 and Red Hat CodeReady Studio 12.16 out we are already working on the next release for Eclipse 2020-09.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Enjoy!&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Jeff Maury&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/ufT4g1fric0" height="1" width="1" alt=""/&gt;</content><summary>JBoss Tools 4.16.0 and Red Hat CodeReady Studio 12.16 for Eclipse 2020-06 are here waiting for you. Check it out! Installation Red Hat CodeReady Studio comes with everything pre-bundled in its installer. Simply download it from our Red Hat CodeReady product page and run it like this: java -jar codereadystudio-&lt;installername&gt;.jar JBoss Tools or Bring-Your-Own-Eclipse (BYOE) CodeReady Studio require a bit more: This release requires at least Eclipse 4.16 (2020-06) but we recommend using the latest Eclipse 4.16 2020-06 JEE Bundle since then you get most of the dependencies preinstalled. Once you have installed Eclipse, you can either find us on the Eclipse Marketplace under "JBoss Tools" or "Red Hat CodeReady...</summary><dc:creator>jeffmaury</dc:creator><dc:date>2020-07-21T00:00:00Z</dc:date><feedburner:origLink>https://tools.jboss.org/blog/12.16.0.ga.html</feedburner:origLink></entry></feed>
